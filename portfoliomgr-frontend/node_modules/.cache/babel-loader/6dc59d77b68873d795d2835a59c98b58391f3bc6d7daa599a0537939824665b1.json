{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"DashboardVue\",\n  data() {\n    return {\n      error: false,\n      hovering: false,\n      errors: false\n    };\n  },\n  methods: {\n    async sellStock(stock, quantity) {\n      try {\n        const response = await fetch(`${BASE_URL}/sell/${this.user_id}`, {\n          method: \"UPDATE\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            stockSymbol: stock.symbol,\n            qty: quantity\n          })\n        });\n      } catch (error) {\n        console.log(error);\n      }\n      if (response.ok) {\n        this.load();\n      } else {\n        console.log(\"error\");\n      }\n    },\n    async exportSongs() {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/export/songs`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${this.token}`\n          }\n        });\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"songs.csv\");\n        document.body.appendChild(link);\n        link.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(link);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    getAlbumURL(album_name) {\n      return `/album/${album_name}`;\n    },\n    getFlagURL(song) {\n      return `/flag/${song.Song_ID}`;\n    },\n    async submitRating(song_name) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/rate\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            rating: this.filledStars,\n            songName: song_name\n          })\n        });\n        if (response.ok) {\n          this.rated = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    setRating(stars) {\n      this.filledStars = stars;\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged\n          };\n          const new_music = {\n            new_music_data: res.new_music_data\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          localStorage.setItem(\"new_music\", JSON.stringify(new_music));\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    async getSongUrl(song) {\n      localStorage.setItem(\"playSong\", JSON.stringify(song));\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/listener/data\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            User_ID: this.user.user_id,\n            Song_ID: song.Song_ID\n          })\n        });\n        if (response.ok) {\n          this.$router.push(`/song/${song.Song_Name}`);\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    openModal(song) {\n      this.currentSong = song;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async getPlaylists() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(`http://127.0.0.1:5000/api/playlist/${this.user.user_id}`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          this.music.playlists = res.playlists;\n          localStorage.setItem(\"music\", JSON.stringify(this.music));\n          this.$router.push(\"/playlists\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async addToPlaylist(playlist_name, song_id) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/playlist/songs/\" + playlist_name, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            Song_ID: song_id,\n            User_ID: this.user.user_id,\n            User_Name: this.user.user_name\n          })\n        });\n        if (response.ok) {\n          alert(\"Song added to playlist!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    stocksOwned() {\n      return this.user.stocks;\n    },\n    stocks() {\n      return JSON.parse(localStorage.getItem(\"stocks\"));\n    },\n    stockName() {\n      return stock => stock.name;\n    },\n    stockSymbol() {\n      return stock => stock.symbol;\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    new_music() {\n      return JSON.parse(localStorage.getItem(\"new_music\"));\n    },\n    isCreator() {\n      if (this.user.role == \"creator\") {\n        return true;\n      }\n      return false;\n    },\n    isAdmin() {\n      if (this.user.role == \"admin\") {\n        return true;\n      }\n      return false;\n    },\n    isUser() {\n      if (this.user.role == \"user\") {\n        return true;\n      }\n      return false;\n    },\n    allSongs() {\n      return this.music.songs;\n    },\n    allAlbums() {\n      return this.music.albums;\n    },\n    playlists() {\n      return this.music.playlists;\n    },\n    no_of_songs() {\n      return this.music.songs.length;\n    },\n    no_of_albums() {\n      return this.music.albums.length;\n    },\n    new_music_data() {\n      return this.new_music.new_music_data;\n    }\n  }\n};","map":{"version":3,"names":["name","data","error","hovering","errors","methods","sellStock","stock","quantity","response","fetch","BASE_URL","user_id","method","headers","body","JSON","stringify","stockSymbol","symbol","qty","console","log","ok","load","exportSongs","Authorization","token","blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","appendChild","click","revokeObjectURL","removeChild","getAlbumURL","album_name","getFlagURL","song","Song_ID","submitRating","song_name","user","access_token","rating","filledStars","songName","rated","setRating","stars","res","json","music","songs","Songs","albums","Albums","playlists","Playlists","flagged","Flagged","new_music","new_music_data","localStorage","setItem","updateMusic","$forceUpdate","getSongUrl","User_ID","$router","push","Song_Name","openModal","currentSong","showModal","closeModal","getPlaylists","addToPlaylist","playlist_name","song_id","User_Name","user_name","alert","computed","parse","getItem","stocksOwned","stocks","stockName","isCreator","role","isAdmin","isUser","allSongs","allAlbums","no_of_songs","length","no_of_albums"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/Dashboard.vue"],"sourcesContent":["<template>\n  <div v-if=\"isUser\">\n    <div class=\"dashboard-container\">\n      <div class=\"sidebar\">\n        <div class=\"sidebar-header\">\n          <h2>{{ user.user_name }}'s Home</h2>\n        </div>\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n\n        <router-link to=\"/stocksInfo\" class=\"btn btn-primary\">\n          Stock Info\n        </router-link>\n\n        <router-link to=\"/addShares\" class=\"btn btn-primary\"\n          >Add Shares</router-link\n        >\n      </div>\n\n      <div class=\"main-content\">\n        <nav class=\"navbar\">\n          <ul class=\"nav-list\"></ul>\n          <ul class=\"nav-list justify-content-end\">\n            <li class=\"nav-item\">\n              <router-link to=\"/userProfile\" class=\"btn btn-primary\"\n                >Profile</router-link\n              >\n            </li>\n\n            <li class=\"nav-item\">\n              <router-link to=\"/about\" class=\"btn btn-primary\"\n                >About Us</router-link\n              >\n            </li>\n            <li class=\"nav-item logout\">\n              <router-link to=\"/\" class=\"btn btn-primary\">Logout</router-link>\n            </li>\n          </ul>\n        </nav>\n\n        <div>\n          <div class=\"heading-container\">\n            <h2\n              class=\"heading\"\n              style=\"\n                font-size: 2rem;\n                margin-bottom: 10px;\n                margin-top: 10px;\n                color: #ffffff;\n                margin-left: 0;\n                text-transform: uppercase;\n                letter-spacing: 2px;\n                font-weight: bold;\n              \"\n            >\n              Stocks Owned\n            </h2>\n          </div>\n\n          <div style=\"display: flex; flex-wrap: wrap\">\n            <div\n              v-for=\"stock in stocksOwned\"\n              :key=\"stock.symbol\"\n              class=\"card-wrapper\"\n            >\n              <div class=\"card\" style=\"width: 18rem; margin: 10px\">\n                <div\n                  class=\"image-container\"\n                  @mouseenter=\"hovering = true\"\n                  @mouseleave=\"hovering = false\"\n                >\n                  <img\n                    :src=\"`http://localhost:5050/static/${stock.symbol}.png`\"\n                    :alt=\"stock.name\"\n                    height=\"300px\"\n                  />\n                </div>\n\n                <div class=\"card-body\">\n                  <h3 class=\"card-title\">{{ stock.name }}</h3>\n                  <p>Stock Name : {{ stock.symbol }}</p>\n                  <p>Current : {{ stock.current }}</p>\n                  <p>Quantity : {{ stock.qty }}</p>\n                </div>\n\n                <div class=\"card-buttons\">\n                  <button\n                    @click=\"getStockInfo(stock)\"\n                    class=\"card-link play-link\"\n                    title=\"Get Info\"\n                  >\n                    ❓\n                  </button>\n\n                  <button\n                    @click=\"openModal(stock.symbol)\"\n                    class=\"card-link play-link\"\n                    title=\"Sell\"\n                  >\n                    ❌\n                  </button>\n\n                  <div\n                    class=\"modal-overlay\"\n                    v-if=\"showModal && currentStock == stock.symbol\"\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div v-else class=\"error-message\">\n    <p class=\"text-danger\">LOGIN TO ACCESS DASHBOARD!</p>\n    <router-link to=\"/\" class=\"btn btn-dark btn-sm\"\n      >Go Back to Login</router-link\n    >\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DashboardVue\",\n\n  data() {\n    return {\n      error: false,\n\n      hovering: false,\n\n      errors: false,\n    };\n  },\n\n  methods: {\n    async sellStock(stock, quantity) {\n      try {\n        const response = await fetch(`${BASE_URL}/sell/${this.user_id}`, {\n          method: \"UPDATE\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            stockSymbol: stock.symbol,\n            qty: quantity,\n          }),\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      if (response.ok) {\n        this.load();\n      } else {\n        console.log(\"error\");\n      }\n    },\n    async exportSongs() {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/export/songs`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${this.token}`,\n          },\n        });\n\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"songs.csv\");\n        document.body.appendChild(link);\n        link.click();\n\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(link);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    getAlbumURL(album_name) {\n      return `/album/${album_name}`;\n    },\n    getFlagURL(song) {\n      return `/flag/${song.Song_ID}`;\n    },\n    async submitRating(song_name) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/rate\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            rating: this.filledStars,\n            songName: song_name,\n          }),\n        });\n        if (response.ok) {\n          this.rated = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    setRating(stars) {\n      this.filledStars = stars;\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged,\n          };\n          const new_music = {\n            new_music_data: res.new_music_data,\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          localStorage.setItem(\"new_music\", JSON.stringify(new_music));\n\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    updateMusic() {\n      this.$forceUpdate();\n    },\n\n    async getSongUrl(song) {\n      localStorage.setItem(\"playSong\", JSON.stringify(song));\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/listener/data\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            User_ID: this.user.user_id,\n            Song_ID: song.Song_ID,\n          }),\n        });\n\n        if (response.ok) {\n          this.$router.push(`/song/${song.Song_Name}`);\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n\n    openModal(song) {\n      this.currentSong = song;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async getPlaylists() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\n          `http://127.0.0.1:5000/api/playlist/${this.user.user_id}`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (response.ok) {\n          const res = await response.json();\n\n          this.music.playlists = res.playlists;\n          localStorage.setItem(\"music\", JSON.stringify(this.music));\n\n          this.$router.push(\"/playlists\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async addToPlaylist(playlist_name, song_id) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\n          \"http://127.0.0.1:5000/api/playlist/songs/\" + playlist_name,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n              Song_ID: song_id,\n              User_ID: this.user.user_id,\n              User_Name: this.user.user_name,\n            }),\n          }\n        );\n\n        if (response.ok) {\n          alert(\"Song added to playlist!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n\n    stocksOwned() {\n      return this.user.stocks;\n    },\n\n    stocks() {\n      return JSON.parse(localStorage.getItem(\"stocks\"));\n    },\n\n    stockName() {\n      return (stock) => stock.name;\n    },\n\n    stockSymbol() {\n      return (stock) => stock.symbol;\n    },\n\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    new_music() {\n      return JSON.parse(localStorage.getItem(\"new_music\"));\n    },\n    isCreator() {\n      if (this.user.role == \"creator\") {\n        return true;\n      }\n      return false;\n    },\n    isAdmin() {\n      if (this.user.role == \"admin\") {\n        return true;\n      }\n      return false;\n    },\n    isUser() {\n      if (this.user.role == \"user\") {\n        return true;\n      }\n      return false;\n    },\n    allSongs() {\n      return this.music.songs;\n    },\n    allAlbums() {\n      return this.music.albums;\n    },\n    playlists() {\n      return this.music.playlists;\n    },\n    no_of_songs() {\n      return this.music.songs.length;\n    },\n    no_of_albums() {\n      return this.music.albums.length;\n    },\n    new_music_data() {\n      return this.new_music.new_music_data;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.btn.btn-primary,\n.sidebar-link {\n  background-color: transparent;\n  border: none;\n  color: #aeaeae;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 1px;\n  outline: none;\n}\n\n.btn.btn-primary:hover,\n.btn.btn-primary:focus,\n.btn.btn-primary:active,\n.sidebar-link:hover {\n  background-color: transparent;\n  color: #ffffff; /* White text on hover, focus, and active */\n  border: none;\n  box-shadow: none; /* Remove any box-shadow */\n  text-decoration: none;\n}\n\n.nav-list {\n  list-style: none;\n  display: flex;\n  justify-content: space-between; /* Space between items */\n  margin: 0;\n  padding: 0;\n}\n\n.nav-item {\n  margin-right: 15px;\n}\n\n.logout a {\n  color: #fff; /* White text color for logout link */\n}\n\n/* Navbar Styling */\n.navbar {\n  background-color: #000000;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n  width: 102%;\n}\n\n.card {\n  width: 18rem;\n  margin: 20px;\n  border: 1px solid #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n  background-color: #080808;\n  color: #ffffff;\n  text-decoration: solid;\n  font-weight: bold;\n}\n\n.card-stats {\n  width: 30rem;\n  margin: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n}\n\n.card:hover {\n  transform: scale(1.05);\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.card-title {\n  font-size: 24px;\n  margin-bottom: 10px;\n}\n\n.card-link {\n  color: #007bff;\n  text-decoration: none;\n  font-weight: bold;\n  margin-right: 15px;\n  transition: color 0.3s ease-in-out;\n}\n\n.card-link:hover {\n  color: #0056b3;\n}\n\n.card-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end; /* Align buttons at the bottom */\n  padding: 0 10px;\n  margin-bottom: 10%; /* Add margin-top to adjust vertical alignment */\n}\n\n.card-link,\n.like-button,\n.playlist-button {\n  background: none;\n  border: none;\n  padding: 0;\n  font-family: inherit;\n  font-size: 2rem;\n  cursor: pointer;\n  text-align: left;\n  color: #007bff; /* Change to your preferred color */\n  transition: color 0.3s ease; /* Add a smooth transition effect */\n  position: relative; /* Enable positioning */\n}\n\n.playlist-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  left: -50px; /* Center horizontally */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n.card-link:hover::after,\n.like-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n.card-link:hover,\n.like-button:hover,\n.playlist-button:hover {\n  color: #0056b3; /* Change to your preferred hover color */\n}\n\n.error-message {\n  background-color: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n  border-radius: 5px;\n  padding: 10px;\n  margin-top: 10px;\n}\n\n.sidebar {\n  height: 100%;\n  width: 250px;\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  background-color: #000000;\n  padding-top: 20px;\n  color: #818181;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.sidebar-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.dashboard-container {\n  display: flex;\n  background-image: url(../assets/Dashboard.jpeg);\n  background-size: cover;\n  background-repeat: repeat;\n  background-position: center center;\n  min-height: 200vh;\n  /* Set the height of the container to 100% of the viewport height */\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px; /* Add padding to create space for the sidebar */\n  margin-top: -19.8px;\n  margin-left: 230px;\n}\n.image-container {\n  position: relative;\n}\n\n.image-container img {\n  width: 100%;\n  transition: filter 0.3s ease;\n}\n\n.rating-screen {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(\n    255,\n    255,\n    255,\n    0.9\n  ); /* Semi-transparent white background */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  pointer-events: none; /* Prevents interactions with the rating screen when hidden */\n  transition: opacity 0.3s ease;\n}\n\n.image-container:hover .rating-screen {\n  opacity: 1;\n  pointer-events: auto; /* Enable interactions with the rating screen on hover */\n}\n\n/* Style the stars for rating */\n.rating-stars {\n  font-size: 24px; /* Adjust size as needed */\n}\n\n/* Adjust styles for when the star is selected */\n.star.selected {\n  color: #ffbb00; /* Selected star color */\n}\n\n.star {\n  cursor: pointer;\n  color: #ddd; /* Default star color */\n}\n\n.star.filled {\n  color: #333; /* Filled star color */\n}\n\n.heading-container {\n  background: linear-gradient(\n    to right,\n    #1f1f21,\n    #63646f\n  ); /* Gradient background */\n  border-radius: 10px; /* Rounded corners */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Subtle shadow effect */\n  padding: 10px 20px; /* Padding */\n  margin-top: 20px;\n  margin-bottom: 10px; /* Margin bottom for spacing */\n  display: inline-block; /* Display as inline-block */\n  text-align: center; /* Center text horizontally */\n}\n\n.heading {\n  margin: 0;\n  font-size: 2rem;\n  color: #ffffff;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: bold;\n}\n.profile-stat {\n  width: 80px;\n  height: 80px;\n  background-color: #ffffff; /* You can change the color */\n  color: #000000;\n  font-size: 16px;\n  padding: 10px;\n}\n\n.profile-card {\n  margin-top: 120px;\n  background-color: #000000; /* Card background color */\n  color: #fff; /* Text color */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border: 1px solid #ddd;\n  border-radius: 8px;\n}\n</style>\n\n<!-- /Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/assets/static/AAPL.png -->\n"],"mappings":";;;;AA2HA,eAAe;EACbA,IAAI,EAAE,cAAc;EAEpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,KAAK;MAEZC,QAAQ,EAAE,KAAK;MAEfC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,SAASA,CAACC,KAAK,EAAEC,QAAQ,EAAE;MAC/B,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAE,GAAEC,QAAS,SAAQ,IAAI,CAACC,OAAQ,EAAC,EAAE;UAC/DC,MAAM,EAAE,QAAQ;UAChBC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,WAAW,EAAEX,KAAK,CAACY,MAAM;YACzBC,GAAG,EAAEZ;UACP,CAAC;QACH,CAAC,CAAC;MACJ,EAAE,OAAON,KAAK,EAAE;QACdmB,OAAO,CAACC,GAAG,CAACpB,KAAK,CAAC;MACpB;MAEA,IAAIO,QAAQ,CAACc,EAAE,EAAE;QACf,IAAI,CAACC,IAAI,CAAC,CAAC;MACb,OAAO;QACLH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACtB;IACF,CAAC;IACD,MAAMG,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMhB,QAAO,GAAI,MAAMC,KAAK,CAAE,oCAAmC,EAAE;UACjEG,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPY,aAAa,EAAG,UAAS,IAAI,CAACC,KAAM;UACtC;QACF,CAAC,CAAC;QAEF,MAAMC,IAAG,GAAI,MAAMnB,QAAQ,CAACmB,IAAI,CAAC,CAAC;QAClC,MAAMC,GAAE,GAAIC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;QAE5C,MAAMK,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAG,GAAIP,GAAG;QACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,WAAW,CAAC;QAC1CH,QAAQ,CAACnB,IAAI,CAACuB,WAAW,CAACL,IAAI,CAAC;QAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC;QAEZT,MAAM,CAACC,GAAG,CAACS,eAAe,CAACX,GAAG,CAAC;QAC/BK,QAAQ,CAACnB,IAAI,CAAC0B,WAAW,CAACR,IAAI,CAAC;MACjC,EAAE,OAAO/B,KAAK,EAAE;QACdmB,OAAO,CAACC,GAAG,CAACpB,KAAK,CAAC;MACpB;IACF,CAAC;IAEDwC,WAAWA,CAACC,UAAU,EAAE;MACtB,OAAQ,UAASA,UAAW,EAAC;IAC/B,CAAC;IACDC,UAAUA,CAACC,IAAI,EAAE;MACf,OAAQ,SAAQA,IAAI,CAACC,OAAQ,EAAC;IAChC,CAAC;IACD,MAAMC,YAAYA,CAACC,SAAS,EAAE;MAC5B,IAAI;QACF,MAAMrB,KAAI,GAAI,IAAI,CAACsB,IAAI,CAACC,YAAY;QACpC,MAAMzC,QAAO,GAAI,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC7DG,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACPY,aAAa,EAAG,UAASC,KAAM,EAAC;YAChC,cAAc,EAAE;UAClB,CAAC;UACDZ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBkC,MAAM,EAAE,IAAI,CAACC,WAAW;YACxBC,QAAQ,EAAEL;UACZ,CAAC;QACH,CAAC,CAAC;QACF,IAAIvC,QAAQ,CAACc,EAAE,EAAE;UACf,IAAI,CAAC+B,KAAI,GAAI,IAAI;QACnB,OAAO;UACL,IAAI,CAACpD,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,IAAI;MACnB;IACF,CAAC;IACDqD,SAASA,CAACC,KAAK,EAAE;MACf,IAAI,CAACJ,WAAU,GAAII,KAAK;IAC1B,CAAC;IACD,MAAMhC,IAAIA,CAAA,EAAG;MACX,IAAI;QACF,MAAMG,KAAI,GAAI,IAAI,CAACsB,IAAI,CAACC,YAAY;QACpC,MAAMzC,QAAO,GAAI,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACzDG,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPY,aAAa,EAAG,UAASC,KAAM;UACjC;QACF,CAAC,CAAC;QACF,IAAIlB,QAAQ,CAACc,EAAE,EAAE;UACf,MAAMkC,GAAE,GAAI,MAAMhD,QAAQ,CAACiD,IAAI,CAAC,CAAC;UACjC,MAAMC,KAAI,GAAI;YACZC,KAAK,EAAEH,GAAG,CAACI,KAAK;YAChBC,MAAM,EAAEL,GAAG,CAACM,MAAM;YAClBC,SAAS,EAAEP,GAAG,CAACQ,SAAS;YACxBC,OAAO,EAAET,GAAG,CAACU;UACf,CAAC;UACD,MAAMC,SAAQ,GAAI;YAChBC,cAAc,EAAEZ,GAAG,CAACY;UACtB,CAAC;UACDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEvD,IAAI,CAACC,SAAS,CAAC0C,KAAK,CAAC,CAAC;UACpDW,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEvD,IAAI,CAACC,SAAS,CAACmD,SAAS,CAAC,CAAC;UAE5D,IAAI,CAACI,WAAW,CAAC,CAAC;QACpB,OAAO;UACL,IAAI,CAACtE,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,IAAI;MACnB;IACF,CAAC;IACDsE,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,YAAY,CAAC,CAAC;IACrB,CAAC;IAED,MAAMC,UAAUA,CAAC7B,IAAI,EAAE;MACrByB,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEvD,IAAI,CAACC,SAAS,CAAC4B,IAAI,CAAC,CAAC;MACtD,IAAI;QACF,MAAMlB,KAAI,GAAI,IAAI,CAACsB,IAAI,CAACC,YAAY;QACpC,MAAMzC,QAAO,GAAI,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAClEG,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACPY,aAAa,EAAG,UAASC,KAAM,EAAC;YAChC,cAAc,EAAE;UAClB,CAAC;UACDZ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB0D,OAAO,EAAE,IAAI,CAAC1B,IAAI,CAACrC,OAAO;YAC1BkC,OAAO,EAAED,IAAI,CAACC;UAChB,CAAC;QACH,CAAC,CAAC;QAEF,IAAIrC,QAAQ,CAACc,EAAE,EAAE;UACf,IAAI,CAACqD,OAAO,CAACC,IAAI,CAAE,SAAQhC,IAAI,CAACiC,SAAU,EAAC,CAAC;QAC9C,OAAO;UACL,IAAI,CAAC5E,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,IAAI;MACnB;IACF,CAAC;IAED6E,SAASA,CAAClC,IAAI,EAAE;MACd,IAAI,CAACmC,WAAU,GAAInC,IAAI;MACvB,IAAI,CAACoC,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACD,SAAQ,GAAI,KAAK;IACxB,CAAC;IACD,MAAME,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMxD,KAAI,GAAI,IAAI,CAACsB,IAAI,CAACC,YAAY;QACpC,MAAMzC,QAAO,GAAI,MAAMC,KAAK,CACzB,sCAAqC,IAAI,CAACuC,IAAI,CAACrC,OAAQ,EAAC,EACzD;UACEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPY,aAAa,EAAG,UAASC,KAAM;UACjC;QACF,CACF,CAAC;QAED,IAAIlB,QAAQ,CAACc,EAAE,EAAE;UACf,MAAMkC,GAAE,GAAI,MAAMhD,QAAQ,CAACiD,IAAI,CAAC,CAAC;UAEjC,IAAI,CAACC,KAAK,CAACK,SAAQ,GAAIP,GAAG,CAACO,SAAS;UACpCM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEvD,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC0C,KAAK,CAAC,CAAC;UAEzD,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL,IAAI,CAAC3E,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACdmB,OAAO,CAACC,GAAG,CAACpB,KAAK,CAAC;MACpB;IACF,CAAC;IAED,MAAMkF,aAAaA,CAACC,aAAa,EAAEC,OAAO,EAAE;MAC1C,IAAI;QACF,MAAM3D,KAAI,GAAI,IAAI,CAACsB,IAAI,CAACC,YAAY;QACpC,MAAMzC,QAAO,GAAI,MAAMC,KAAK,CAC1B,2CAA0C,GAAI2E,aAAa,EAC3D;UACExE,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCY,aAAa,EAAG,UAASC,KAAM;UACjC,CAAC;UACDZ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnB6B,OAAO,EAAEwC,OAAO;YAChBX,OAAO,EAAE,IAAI,CAAC1B,IAAI,CAACrC,OAAO;YAC1B2E,SAAS,EAAE,IAAI,CAACtC,IAAI,CAACuC;UACvB,CAAC;QACH,CACF,CAAC;QAED,IAAI/E,QAAQ,CAACc,EAAE,EAAE;UACfkE,KAAK,CAAC,yBAAyB,CAAC;UAChC,IAAI,CAACb,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL,IAAI,CAAC3E,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACdmB,OAAO,CAACC,GAAG,CAACpB,KAAK,CAAC;MACpB;IACF;EACF,CAAC;EACDwF,QAAQ,EAAE;IACRzC,IAAIA,CAAA,EAAG;MACL,OAAOjC,IAAI,CAAC2E,KAAK,CAACrB,YAAY,CAACsB,OAAO,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IAEDC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAC5C,IAAI,CAAC6C,MAAM;IACzB,CAAC;IAEDA,MAAMA,CAAA,EAAG;MACP,OAAO9E,IAAI,CAAC2E,KAAK,CAACrB,YAAY,CAACsB,OAAO,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEDG,SAASA,CAAA,EAAG;MACV,OAAQxF,KAAK,IAAKA,KAAK,CAACP,IAAI;IAC9B,CAAC;IAEDkB,WAAWA,CAAA,EAAG;MACZ,OAAQX,KAAK,IAAKA,KAAK,CAACY,MAAM;IAChC,CAAC;IAEDwC,KAAKA,CAAA,EAAG;MACN,OAAO3C,IAAI,CAAC2E,KAAK,CAACrB,YAAY,CAACsB,OAAO,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IACDxB,SAASA,CAAA,EAAG;MACV,OAAOpD,IAAI,CAAC2E,KAAK,CAACrB,YAAY,CAACsB,OAAO,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IACDI,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAAC/C,IAAI,CAACgD,IAAG,IAAK,SAAS,EAAE;QAC/B,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACjD,IAAI,CAACgD,IAAG,IAAK,OAAO,EAAE;QAC7B,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC;IACDE,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAAClD,IAAI,CAACgD,IAAG,IAAK,MAAM,EAAE;QAC5B,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC;IACDG,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACzC,KAAK,CAACC,KAAK;IACzB,CAAC;IACDyC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAC1C,KAAK,CAACG,MAAM;IAC1B,CAAC;IACDE,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACL,KAAK,CAACK,SAAS;IAC7B,CAAC;IACDsC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAC3C,KAAK,CAACC,KAAK,CAAC2C,MAAM;IAChC,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAAC7C,KAAK,CAACG,MAAM,CAACyC,MAAM;IACjC,CAAC;IACDlC,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACD,SAAS,CAACC,cAAc;IACtC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}