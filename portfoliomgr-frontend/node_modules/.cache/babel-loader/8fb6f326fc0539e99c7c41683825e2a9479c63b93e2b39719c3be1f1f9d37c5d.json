{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"AlbumSongsVue\",\n  data() {\n    return {\n      selectedPlaylist: null,\n      showModal: false,\n      currentSong: null,\n      albumName: this.$route.params.album_name,\n      hovering: false,\n      filledStars: 0,\n      hoveredStars: 0,\n      rated: false,\n      flagged: false\n    };\n  },\n  mounted() {\n    this.load();\n  },\n  methods: {\n    setRating(stars) {\n      this.filledStars = stars;\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    getFlagURL(song) {\n      return `/flag/${song.Song_ID}`;\n    },\n    async submitRating(song_name) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/rate\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            rating: this.filledStars,\n            songName: song_name\n          })\n        });\n        if (response.ok) {\n          this.rated = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    getSongUrl(song) {\n      localStorage.setItem(\"playSong\", JSON.stringify(song));\n      this.$router.push(`/song/${song.Song_Name}`);\n    },\n    openModal(song) {\n      this.currentSong = song;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async getPlaylists() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(`http://127.0.0.1:5000/api/playlist/${this.user.user_id}`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          this.music.playlists = res.playlists;\n          localStorage.setItem(\"music\", JSON.stringify(this.music));\n          this.$router.push(\"/playlists\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async addToPlaylist(playlist_name, song_id) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/playlist/songs/\" + playlist_name, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            Song_ID: song_id,\n            User_ID: this.user.user_id,\n            User_Name: this.user.user_name\n          })\n        });\n        if (response.ok) {\n          alert(\"Song added to playlist!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    songs() {\n      let filteredSongs = [];\n      for (const song of this.music.songs) {\n        if (song.Album_Name === this.albumName) {\n          filteredSongs.push(song);\n        }\n      }\n      return filteredSongs;\n    },\n    playlists() {\n      return this.music.playlists;\n    }\n  }\n};","map":{"version":3,"names":["name","data","selectedPlaylist","showModal","currentSong","albumName","$route","params","album_name","hovering","filledStars","hoveredStars","rated","flagged","mounted","load","methods","setRating","stars","token","user","access_token","response","fetch","method","headers","Authorization","ok","res","json","music","songs","Songs","albums","Albums","playlists","Playlists","Flagged","localStorage","setItem","JSON","stringify","updateMusic","error","$forceUpdate","getFlagURL","song","Song_ID","submitRating","song_name","body","rating","songName","getSongUrl","$router","push","Song_Name","openModal","closeModal","getPlaylists","user_id","console","log","addToPlaylist","playlist_name","song_id","User_ID","User_Name","user_name","alert","computed","parse","getItem","filteredSongs","Album_Name"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/albumSongs.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"main-content\">\n      <nav class=\"navbar\">\n        <ul class=\"nav-list\">\n          <li class=\"nav-item\">\n            <router-link to=\"/about\" class=\"btn btn-primary\"\n              >About Us</router-link\n            >\n          </li>\n          <li class=\"nav-item\">\n            <router-link to=\"/dashboard\" class=\"btn btn-primary\"\n              >Dashboard</router-link\n            >\n          </li>\n        </ul>\n        <ul class=\"nav-list justify-content-end\">\n          <li class=\"nav-item logout\">\n            <router-link to=\"/\" class=\"btn btn-primary\">Logout</router-link>\n          </li>\n        </ul>\n      </nav>\n      <div style=\"display: flex; flex-wrap: wrap\">\n        <div v-for=\"song in songs\" :key=\"song.Song_ID\" class=\"card-wrapper\">\n          <div class=\"card\" style=\"width: 18rem; margin: 10px\">\n            <div\n              class=\"image-container\"\n              @mouseenter=\"hovering = true\"\n              @mouseleave=\"hovering = false\"\n            >\n              <img\n                :src=\"`http://127.0.0.1:5000/static/${song.Album_Image}`\"\n                alt=\"Album Image\"\n                height=\"300px\"\n              />\n              <div class=\"rating-screen\" v-if=\"hovering && !rated\">\n                <p style=\"color: black\">Current rating : {{ song.Rating }}</p>\n                <p style=\"color: black\">Rate this song:</p>\n\n                <div class=\"rating-stars\">\n                  <span\n                    v-for=\"index in 5\"\n                    :key=\"index\"\n                    class=\"star\"\n                    :class=\"{ filled: index <= filledStars }\"\n                    @click=\"setRating(index)\"\n                  >\n                    &#9733;\n                  </span>\n                </div>\n                <button\n                  class=\"btn btn-primary\"\n                  style=\"color: black\"\n                  @click=\"submitRating(song.Song_Name)\"\n                >\n                  Submit Rating\n                </button>\n              </div>\n\n              <div class=\"rating-screen\" v-if=\"hovering && rated\">\n                <p style=\"color: black\">Already Rated!‚úÖ</p>\n              </div>\n            </div>\n\n            <div class=\"card-body\">\n              <h3 class=\"card-title\">{{ song.Song_Name }}</h3>\n              <p>From {{ song.Album_Name }}</p>\n              <p>By {{ song.Creator_Name }}</p>\n            </div>\n\n            <div class=\"card-buttons\">\n              <button\n                @click=\"getSongUrl(song)\"\n                class=\"card-link play-link\"\n                title=\"Play Song\"\n              >\n                <img src=\"../assets/Play.png\" height=\"50px\" weight=\"50px\" />\n              </button>\n              <router-link\n                class=\"like-button\"\n                :to=\"getFlagURL(song)\"\n                title=\"Flag/Report\"\n              >\n                üö©\n              </router-link>\n              <button\n                class=\"playlist-button\"\n                @click=\"openModal(song.Song_ID)\"\n                title=\"+ Playlist\"\n              >\n                üìÅ\n              </button>\n\n              <div\n                class=\"modal-overlay\"\n                v-if=\"showModal && currentSong == song.Song_ID\"\n              >\n                <div\n                  class=\"modal-content\"\n                  style=\"\n                    background-color: black;\n                    color: #ffffff;\n                    outline: 2px solid white;\n                  \"\n                >\n                  <h3>Select Playlist</h3>\n                  <select v-model=\"selectedPlaylist\">\n                    <option\n                      v-for=\"playlist in playlists\"\n                      :key=\"playlist.Playlist_ID\"\n                    >\n                      {{ playlist.Playlist_Name }}\n                    </option>\n                  </select>\n                  <button\n                    class=\"btn btn-primary\"\n                    @click=\"addToPlaylist(selectedPlaylist, song.Song_ID)\"\n                  >\n                    Add to Playlist\n                  </button>\n                  <button class=\"btn btn-primary\" @click=\"closeModal\">\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AlbumSongsVue\",\n  data() {\n    return {\n      selectedPlaylist: null,\n      showModal: false,\n      currentSong: null,\n      albumName: this.$route.params.album_name,\n      hovering: false,\n      filledStars: 0,\n      hoveredStars: 0,\n      rated: false,\n      flagged: false,\n    };\n  },\n  mounted() {\n    this.load();\n  },\n  methods: {\n    setRating(stars) {\n      this.filledStars = stars;\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged,\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    getFlagURL(song) {\n      return `/flag/${song.Song_ID}`;\n    },\n    async submitRating(song_name) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/rate\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            rating: this.filledStars,\n            songName: song_name,\n          }),\n        });\n        if (response.ok) {\n          this.rated = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    getSongUrl(song) {\n      localStorage.setItem(\"playSong\", JSON.stringify(song));\n\n      this.$router.push(`/song/${song.Song_Name}`);\n    },\n    openModal(song) {\n      this.currentSong = song;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async getPlaylists() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\n          `http://127.0.0.1:5000/api/playlist/${this.user.user_id}`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (response.ok) {\n          const res = await response.json();\n\n          this.music.playlists = res.playlists;\n          localStorage.setItem(\"music\", JSON.stringify(this.music));\n\n          this.$router.push(\"/playlists\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async addToPlaylist(playlist_name, song_id) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\n          \"http://127.0.0.1:5000/api/playlist/songs/\" + playlist_name,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n              Song_ID: song_id,\n              User_ID: this.user.user_id,\n              User_Name: this.user.user_name,\n            }),\n          }\n        );\n\n        if (response.ok) {\n          alert(\"Song added to playlist!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    songs() {\n      let filteredSongs = [];\n      for (const song of this.music.songs) {\n        if (song.Album_Name === this.albumName) {\n          filteredSongs.push(song);\n        }\n      }\n      return filteredSongs;\n    },\n    playlists() {\n      return this.music.playlists;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.btn.btn-primary,\n.sidebar-link {\n  background-color: transparent;\n  border: none;\n  color: #aeaeae;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 1px;\n  outline: none;\n}\n\n.btn.btn-primary:hover,\n.btn.btn-primary:focus,\n.btn.btn-primary:active,\n.sidebar-link:hover {\n  background-color: transparent;\n  color: #ffffff; /* White text on hover, focus, and active */\n  border: none;\n  box-shadow: none; /* Remove any box-shadow */\n  text-decoration: none;\n}\n\n.nav-list {\n  list-style: none;\n  display: flex;\n  justify-content: space-between; /* Space between items */\n  margin: 0;\n  padding: 0;\n}\n\n.nav-item {\n  margin-right: 15px;\n}\n\n.logout a {\n  color: #fff; /* White text color for logout link */\n}\n\n/* Navbar Styling */\n.navbar {\n  background-color: #000000;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n  width: 102%;\n}\n\n.card {\n  width: 18rem;\n  margin: 20px;\n  border: 1px solid #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n  background-color: #080808;\n  color: #ffffff;\n  text-decoration: solid;\n  font-weight: bold;\n}\n\n.card-stats {\n  width: 30rem;\n  margin: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n}\n\n.card:hover {\n  transform: scale(1.05);\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.card-title {\n  font-size: 24px;\n  margin-bottom: 10px;\n}\n\n.card-link {\n  color: #007bff;\n  text-decoration: none;\n  font-weight: bold;\n  margin-right: 15px;\n  transition: color 0.3s ease-in-out;\n}\n\n.card-link:hover {\n  color: #0056b3;\n}\n\n.card-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end; /* Align buttons at the bottom */\n  padding: 0 10px;\n  margin-bottom: 10%; /* Add margin-top to adjust vertical alignment */\n}\n\n.card-link,\n.like-button,\n.playlist-button {\n  background: none;\n  border: none;\n  padding: 0;\n  font-family: inherit;\n  font-size: 2rem;\n  cursor: pointer;\n  text-align: left;\n  color: #007bff; /* Change to your preferred color */\n  transition: color 0.3s ease; /* Add a smooth transition effect */\n  position: relative; /* Enable positioning */\n}\n\n.playlist-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  left: -50px; /* Center horizontally */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n.card-link:hover::after,\n.like-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n.card-link:hover,\n.like-button:hover,\n.playlist-button:hover {\n  color: #0056b3; /* Change to your preferred hover color */\n}\n\n.image-container {\n  position: relative;\n}\n\n.image-container img {\n  width: 100%;\n  transition: filter 0.3s ease;\n}\n\n.rating-screen {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(\n    255,\n    255,\n    255,\n    0.9\n  ); /* Semi-transparent white background */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  pointer-events: none; /* Prevents interactions with the rating screen when hidden */\n  transition: opacity 0.3s ease;\n}\n\n.image-container:hover .rating-screen {\n  opacity: 1;\n  pointer-events: auto; /* Enable interactions with the rating screen on hover */\n}\n\n/* Style the stars for rating */\n.rating-stars {\n  font-size: 24px; /* Adjust size as needed */\n}\n\n/* Adjust styles for when the star is selected */\n.star.selected {\n  color: #ffbb00; /* Selected star color */\n}\n\n.star {\n  cursor: pointer;\n  color: #ddd; /* Default star color */\n}\n\n.star.filled {\n  color: #333; /* Filled star color */\n}\n\n.dashboard-container {\n  display: flex;\n  background-image: url(../assets/Dashboard.jpeg);\n  background-size: cover;\n  background-repeat: repeat;\n  background-position: center center;\n  min-height: 100vh;\n\n  /* Set the height of the container to 100% of the viewport height */\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px; /* Add padding to create space for the sidebar */\n  margin-top: -19.8px;\n  margin-left: -20px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}