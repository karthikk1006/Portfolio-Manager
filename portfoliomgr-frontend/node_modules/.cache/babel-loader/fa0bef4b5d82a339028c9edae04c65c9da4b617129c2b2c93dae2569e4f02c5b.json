{"ast":null,"code":"export default {\n  name: \"SongVue\",\n  data() {\n    return {\n      showModal: false,\n      currentSong: null,\n      selectedPlaylist: null,\n      lyrics: null,\n      error: false\n    };\n  },\n  mounted() {\n    console.log(this.song);\n    this.fetchLyrics();\n  },\n  methods: {\n    async fetchLyrics() {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/static/music/${this.song.Lyrics_File}`);\n        if (response.ok) {\n          const lyricsData = await response.text();\n          this.lyrics = lyricsData;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    openModal() {\n      console.log(this.song);\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async addToPlaylist(playlist_name, song_id) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/playlist/songs/\" + playlist_name, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            Song_ID: song_id,\n            User_ID: this.user.user_id,\n            User_Name: this.user.user_name\n          })\n        });\n        if (response.ok) {\n          alert(\"Song added to playlist!\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    song() {\n      return JSON.parse(localStorage.getItem(\"playSong\"));\n    },\n    playlists() {\n      return this.music.playlists;\n    }\n  }\n};","map":{"version":3,"names":["name","data","showModal","currentSong","selectedPlaylist","lyrics","error","mounted","console","log","song","fetchLyrics","methods","response","fetch","Lyrics_File","ok","lyricsData","text","openModal","closeModal","addToPlaylist","playlist_name","song_id","token","user","access_token","method","headers","Authorization","body","JSON","stringify","Song_ID","User_ID","user_id","User_Name","user_name","alert","computed","parse","localStorage","getItem","music","playlists"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/Song.vue"],"sourcesContent":["<template>\n  <div class=\"page-container\">\n    <nav class=\"navbar\">\n      <ul class=\"nav-list\">\n        <li class=\"nav-item\">\n          <router-link to=\"/about\" class=\"btn btn-primary\"\n            >About Us</router-link\n          >\n        </li>\n        <li class=\"nav-item\">\n          <router-link to=\"/dashboard\" class=\"btn btn-primary\"\n            >Dashboard</router-link\n          >\n        </li>\n      </ul>\n      <ul class=\"nav-list justify-content-end\">\n        <li class=\"nav-item logout\">\n          <router-link to=\"/\" class=\"btn btn-primary\">Logout</router-link>\n        </li>\n      </ul>\n    </nav>\n    <div class=\"container\">\n      <div class=\"song-info-card card\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ song.Song_Name }}</h5>\n          <div class=\"song-details\">\n            <p><strong>Album Name:</strong> {{ song.Album_Name }}</p>\n            <p><strong>Creator Name:</strong> {{ song.Creator_Name }}</p>\n            <p><strong>Rating:</strong> {{ song.Rating }}</p>\n            <p>\n              <strong>Created Date:</strong>\n              {{ song.Created_Date.slice(5, 16) }}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"song-card card\">\n        <img\n          :src=\"`http://127.0.0.1:5000/static/${song.Album_Image}`\"\n          alt=\"Album Image\"\n          height=\"300px\"\n        />\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ song.Song_Name }}</h5>\n          <br />\n          <audio controls autoplay>\n            <source\n              :src=\"`http://127.0.0.1:5000/static/music/${song.Song_File}`\"\n              type=\"audio/mp3\"\n            />\n            Your browser does not support the audio element.\n          </audio>\n          <div class=\"card-buttons\">\n            <button\n              class=\"playlist-button\"\n              @click=\"openModal(song.Song_ID)\"\n              title=\"+ Playlist\"\n            >\n              üìÅ\n            </button>\n            <div class=\"modal-overlay\" v-if=\"showModal\">\n              <div\n                class=\"modal-content\"\n                style=\"\n                  background-color: black;\n                  color: #ffffff;\n                  outline: 2px solid white;\n                \"\n              >\n                <h3>Select Playlist</h3>\n                <select v-model=\"selectedPlaylist\">\n                  <option\n                    v-for=\"playlist in playlists\"\n                    :key=\"playlist.Playlist_ID\"\n                  >\n                    {{ playlist.Playlist_Name }}\n                  </option>\n                </select>\n                <button\n                  class=\"btn btn-primary\"\n                  @click=\"addToPlaylist(selectedPlaylist, song.Song_ID)\"\n                >\n                  Add to Playlist\n                </button>\n                <button class=\"btn btn-primary\" @click=\"closeModal\">\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"lyrics-container card\">\n        <div class=\"card-body\">\n          <pre style=\"color: #ffffff\">{{ lyrics }}</pre>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"SongVue\",\n  data() {\n    return {\n      showModal: false,\n      currentSong: null,\n      selectedPlaylist: null,\n      lyrics: null,\n      error: false,\n    };\n  },\n  mounted() {\n    console.log(this.song);\n    this.fetchLyrics();\n  },\n  methods: {\n    async fetchLyrics() {\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:5000/static/music/${this.song.Lyrics_File}`\n        );\n        if (response.ok) {\n          const lyricsData = await response.text();\n          this.lyrics = lyricsData;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    openModal() {\n      console.log(this.song);\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async addToPlaylist(playlist_name, song_id) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\n          \"http://127.0.0.1:5000/api/playlist/songs/\" + playlist_name,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n              Song_ID: song_id,\n              User_ID: this.user.user_id,\n              User_Name: this.user.user_name,\n            }),\n          }\n        );\n\n        if (response.ok) {\n          alert(\"Song added to playlist!\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    song() {\n      return JSON.parse(localStorage.getItem(\"playSong\"));\n    },\n    playlists() {\n      return this.music.playlists;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.page-container {\n  background-color: #f8f9fa;\n  background-image: url(../assets/BG.png);\n  background-size: cover;\n  min-height: 100vh;\n}\n\n.btn.btn-primary,\n.sidebar-link {\n  background-color: transparent;\n  border: none;\n  color: #aeaeae;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 1px;\n  outline: none;\n}\n\n.btn.btn-primary:hover,\n.btn.btn-primary:focus,\n.btn.btn-primary:active,\n.sidebar-link:hover {\n  background-color: transparent;\n  color: #ffffff; /* White text on hover, focus, and active */\n  border: none;\n  box-shadow: none; /* Remove any box-shadow */\n  text-decoration: none;\n}\n\n.nav-list {\n  list-style: none;\n  display: flex;\n  justify-content: space-between; /* Space between items */\n  margin: 0;\n  padding: 0;\n}\n\n.nav-item {\n  margin-right: 15px;\n}\n\n.logout a {\n  color: #fff; /* White text color for logout link */\n}\n\n/* Navbar Styling */\n.navbar {\n  background-color: #000000;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n  width: 102%;\n}\n\n.container {\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n}\n\n.card {\n  width: 30%;\n  margin: 20px;\n  background-color: #080808;\n  color: #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.card img {\n  width: 100%;\n}\n\n.card-body {\n  padding: 20px;\n}\n\n.card-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n.playlist-button {\n  font-size: 24px;\n}\n.song-info-card {\n  width: 30%;\n  height: 30%;\n  margin: 20px;\n  background-color: #000000;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.song-info-card .card-body {\n  padding: 20px;\n}\n\n.song-info-card .card-title {\n  font-size: 1.5rem;\n  margin-bottom: 10px;\n}\n\n.song-info-card .song-details p {\n  margin: 0;\n  padding: 5px 0;\n}\n\n.song-info-card .song-details p strong {\n  font-weight: bold;\n}\n\n.song-info-card .song-details p:nth-child(even) {\n  background-color: #d13636;\n}\n\n.song-card {\n  width: 30%;\n  height: 40%;\n}\n\n.lyrics-container {\n  width: 25%;\n  background-color: #080808;\n  color: #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.lyrics-container .card-body {\n  padding: 20px;\n}\n\n@media (max-width: 768px) {\n  .container {\n    flex-direction: column;\n  }\n\n  .card,\n  .lyrics-container {\n    width: 100%;\n    margin-bottom: 20px;\n  }\n}\n\n.playlist-button {\n  background: none;\n  border: none;\n  padding: 0;\n  font-family: inherit;\n  font-size: 2rem;\n  cursor: pointer;\n  margin-left: 50%;\n  color: #007bff; /* Change to your preferred color */\n  transition: color 0.3s ease; /* Add a smooth transition effect */\n  position: relative; /* Enable positioning */\n}\n\n.playlist-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  left: -50px; /* Center horizontally */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n</style>\n"],"mappings":"AAuGA,eAAe;EACbA,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,IAAI;MACjBC,gBAAgB,EAAE,IAAI;MACtBC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAAC;IACtB,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CACzB,sCAAqC,IAAI,CAACJ,IAAI,CAACK,WAAY,EAC9D,CAAC;QACD,IAAIF,QAAQ,CAACG,EAAE,EAAE;UACf,MAAMC,UAAS,GAAI,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;UACxC,IAAI,CAACb,MAAK,GAAIY,UAAU;QAC1B,OAAO;UACL,IAAI,CAACX,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACdE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACpB;IACF,CAAC;IACDa,SAASA,CAAA,EAAG;MACVX,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAAC;MACtB,IAAI,CAACR,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDkB,UAAUA,CAAA,EAAG;MACX,IAAI,CAAClB,SAAQ,GAAI,KAAK;IACxB,CAAC;IACD,MAAMmB,aAAaA,CAACC,aAAa,EAAEC,OAAO,EAAE;MAC1C,IAAI;QACF,MAAMC,KAAI,GAAI,IAAI,CAACC,IAAI,CAACC,YAAY;QACpC,MAAMb,QAAO,GAAI,MAAMC,KAAK,CAC1B,2CAA0C,GAAIQ,aAAa,EAC3D;UACEK,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAASL,KAAM;UACjC,CAAC;UACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,OAAO,EAAEV,OAAO;YAChBW,OAAO,EAAE,IAAI,CAACT,IAAI,CAACU,OAAO;YAC1BC,SAAS,EAAE,IAAI,CAACX,IAAI,CAACY;UACvB,CAAC;QACH,CACF,CAAC;QAED,IAAIxB,QAAQ,CAACG,EAAE,EAAE;UACfsB,KAAK,CAAC,yBAAyB,CAAC;QAClC,OAAO;UACL,IAAI,CAAChC,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACdE,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACpB;IACF;EACF,CAAC;EAEDiC,QAAQ,EAAE;IACRd,IAAIA,CAAA,EAAG;MACL,OAAOM,IAAI,CAACS,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,OAAOZ,IAAI,CAACS,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IACDhC,IAAIA,CAAA,EAAG;MACL,OAAOqB,IAAI,CAACS,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IACrD,CAAC;IACDE,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACD,KAAK,CAACC,SAAS;IAC7B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}