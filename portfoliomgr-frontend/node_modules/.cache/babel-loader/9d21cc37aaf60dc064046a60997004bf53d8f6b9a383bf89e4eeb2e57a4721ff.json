{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"UserProfileVue\",\n  data() {\n    return {\n      hovering: false,\n      showModal: false,\n      showPlaylists: true,\n      playlist_name: \"\",\n      user_no_of_playlists: 0,\n      error: \"\"\n    };\n  },\n  mounted() {\n    this.load();\n    for (const playlist of this.playlists) {\n      if (this.user.user_id == playlist.User_ID) {\n        this.user_no_of_playlists++;\n      }\n    }\n  },\n  methods: {\n    async getSongUrl(song) {\n      localStorage.setItem(\"playSong\", JSON.stringify(song));\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/listener/data\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            User_ID: this.user.user_id,\n            Song_ID: song.Song_ID\n          })\n        });\n        if (response.ok) {\n          this.$router.push(`/song/${song.Song_Name}`);\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    getAlbumURL(album_name) {\n      return `/edit/albums/${album_name}`;\n    },\n    getSongURL(song_name) {\n      return `/edit/songs/${song_name}`;\n    },\n    showSongs(playlist_name) {\n      this.showPlaylists = false;\n      this.playlist_name = playlist_name;\n    },\n    async removePlaylist(playlist_id) {\n      const token = this.user.access_token;\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/api/playlist/delete/${playlist_id}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          alert(\"Playlist deleted!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async removeSong(song_id) {\n      const token = this.user.access_token;\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/api/songs/${song_id}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          alert(\"Song deleted!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    albums() {\n      return this.music.albums;\n    },\n    songs() {\n      return this.music.songs;\n    },\n    playlists() {\n      return this.music.playlists;\n    },\n    flagged() {\n      return this.music.flagged;\n    }\n  }\n};","map":{"version":3,"names":["name","data","hovering","showModal","showPlaylists","playlist_name","user_no_of_playlists","error","mounted","load","playlist","playlists","user","user_id","User_ID","methods","getSongUrl","song","localStorage","setItem","JSON","stringify","token","access_token","response","fetch","method","headers","Authorization","body","Song_ID","ok","$router","push","Song_Name","res","json","music","songs","Songs","albums","Albums","Playlists","flagged","Flagged","updateMusic","$forceUpdate","getAlbumURL","album_name","getSongURL","song_name","showSongs","removePlaylist","playlist_id","alert","console","log","removeSong","song_id","computed","parse","getItem"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/userProfile.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"main-content\">\n      <nav class=\"navbar\">\n        <ul class=\"nav-list\">\n          <li class=\"nav-item\">\n            <router-link to=\"/about\" class=\"btn btn-primary\"\n              >About Us</router-link\n            >\n          </li>\n          <li class=\"nav-item\">\n            <router-link to=\"/dashboard\" class=\"btn btn-primary\"\n              >Dashboard</router-link\n            >\n          </li>\n        </ul>\n        <ul class=\"nav-list justify-content-end\">\n          <li class=\"nav-item logout\">\n            <router-link to=\"/\" class=\"btn btn-primary\">Logout</router-link>\n          </li>\n        </ul>\n      </nav>\n\n      <div class=\"container-fluid mt-3\">\n        <div class=\"row\">\n          <div class=\"col-md-8\">\n            <div v-if=\"showPlaylists\">\n              <!-- Cards for creator songs -->\n              <div class=\"heading-container\">\n                <h2\n                  class=\"heading\"\n                  style=\"\n                    font-size: 2rem;\n                    margin-bottom: 10px;\n                    margin-top: 10px;\n                    color: #ffffff;\n                    margin-left: 0;\n                    text-transform: uppercase;\n                    letter-spacing: 2px;\n                    font-weight: bold;\n                  \"\n                >\n                  {{ user.user_name }}'s Playlists\n                </h2>\n              </div>\n\n              <div class=\"card-deck\">\n                <!-- Example card (replace with dynamic content) -->\n\n                <div\n                  v-for=\"playlist in playlists\"\n                  :key=\"playlist.Playlist_ID\"\n                  class=\"card-wrapper\"\n                >\n                  <div v-if=\"playlist.User_ID == user.user_id\">\n                    <div class=\"card\" style=\"width: 18rem; margin: 10px\">\n                      <div class=\"card-body\">\n                        <h5 class=\"card-title\">{{ playlist.Playlist_Name }}</h5>\n                      </div>\n\n                      <div class=\"card-buttons\">\n                        <button\n                          class=\"btn btn-primary\"\n                          @click=\"removePlaylist(playlist.Playlist_ID)\"\n                          style=\"margin-left: 85px\"\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Right side for statistics -->\n          <div class=\"col-md-4\">\n            <div class=\"profile-card\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ user.user_name }}'s Profile</h5>\n                <div class=\"d-flex justify-content-center\">\n                  <img\n                    class=\"rounded-circle profile-picture\"\n                    :src=\"`http://127.0.0.1:5000/static/users/${user.profile}`\"\n                    alt=\"`http://127.0.0.1:5000/static/users/user.jpeg`\"\n                    height=\"220px\"\n                    width=\"180px\"\n                  />\n                </div>\n                <div class=\"d-flex justify-content-around\">\n                  <div class=\"rounded-circle text-center profile-stat mt-5\">\n                    <!-- Added mt-4 class for margin top -->\n                    <h6 class=\"mb-0\">{{ user_no_of_playlists }}</h6>\n                    <p class=\"mb-0\">playlists</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"col-md-8\">\n            <div class=\"heading-container\">\n              <h2\n                class=\"heading\"\n                style=\"\n                  font-size: 2rem;\n                  margin-bottom: 10px;\n                  margin-top: 10px;\n                  color: #ffffff;\n                  margin-left: 0;\n                  text-transform: uppercase;\n                  letter-spacing: 2px;\n                  font-weight: bold;\n                \"\n              >\n                {{ user.user_name }}'s Flagged Songs\n              </h2>\n            </div>\n            <div class=\"card-deck\">\n              <!-- Example card (replace with dynamic content) -->\n\n              <div\n                v-for=\"flagsong in flagged\"\n                :key=\"flagsong.Song_ID\"\n                class=\"card-wrapper\"\n              >\n                <div v-if=\"flagsong.User_ID == user.user_id\">\n                  <div v-for=\"song in songs\" :key=\"song.Song_ID\">\n                    <div v-if=\"song.Song_ID == flagsong.Song_ID\">\n                      <div class=\"card\" style=\"width: 18rem; margin: 10px\">\n                        <div\n                          class=\"image-container\"\n                          @mouseenter=\"hovering = true\"\n                          @mouseleave=\"hovering = false\"\n                        >\n                          <img\n                            :src=\"`http://127.0.0.1:5000/static/${song.Album_Image}`\"\n                            alt=\"Album Image\"\n                            height=\"300px\"\n                          />\n                          <div class=\"rating-screen\" v-if=\"hovering\">\n                            <p style=\"color: black\">\n                              Current rating : {{ song.Rating }}\n                            </p>\n                          </div>\n                        </div>\n\n                        <div class=\"card-body\">\n                          <h5 class=\"card-title\">{{ song.Song_Name }}</h5>\n                          <p>Reason : {{ flagsong.Reason }}</p>\n                        </div>\n\n                        <div class=\"card-buttons\">\n                          <button\n                            @click=\"getSongUrl(song)\"\n                            class=\"card-link play-link\"\n                            title=\"Play Song\"\n                            style=\"margin-left: 100px\"\n                          >\n                            <img\n                              src=\"../assets/Play.png\"\n                              height=\"50px\"\n                              weight=\"50px\"\n                            />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"UserProfileVue\",\n  data() {\n    return {\n      hovering: false,\n      showModal: false,\n      showPlaylists: true,\n      playlist_name: \"\",\n      user_no_of_playlists: 0,\n      error: \"\",\n    };\n  },\n  mounted() {\n    this.load();\n    for (const playlist of this.playlists) {\n      if (this.user.user_id == playlist.User_ID) {\n        this.user_no_of_playlists++;\n      }\n    }\n  },\n  methods: {\n    async getSongUrl(song) {\n      localStorage.setItem(\"playSong\", JSON.stringify(song));\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/listener/data\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            User_ID: this.user.user_id,\n            Song_ID: song.Song_ID,\n          }),\n        });\n\n        if (response.ok) {\n          this.$router.push(`/song/${song.Song_Name}`);\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged,\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    getAlbumURL(album_name) {\n      return `/edit/albums/${album_name}`;\n    },\n    getSongURL(song_name) {\n      return `/edit/songs/${song_name}`;\n    },\n    showSongs(playlist_name) {\n      this.showPlaylists = false;\n      this.playlist_name = playlist_name;\n    },\n    async removePlaylist(playlist_id) {\n      const token = this.user.access_token;\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:5000/api/playlist/delete/${playlist_id}`,\n          {\n            method: \"DELETE\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        if (response.ok) {\n          alert(\"Playlist deleted!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async removeSong(song_id) {\n      const token = this.user.access_token;\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:5000/api/songs/${song_id}`,\n          {\n            method: \"DELETE\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        if (response.ok) {\n          alert(\"Song deleted!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    albums() {\n      return this.music.albums;\n    },\n    songs() {\n      return this.music.songs;\n    },\n    playlists() {\n      return this.music.playlists;\n    },\n    flagged() {\n      return this.music.flagged;\n    },\n  },\n};\n</script>\n<style scoped>\n.btn.btn-primary {\n  background-color: transparent;\n  border: none;\n  color: #aeaeae;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 1px;\n  outline: none;\n}\n\n.btn.btn-primary:hover,\n.btn.btn-primary:focus,\n.btn.btn-primary:active,\n.card-buttons:hover {\n  background-color: transparent;\n  color: #ffffff; /* White text on hover, focus, and active */\n  border: none;\n  box-shadow: none; /* Remove any box-shadow */\n  text-decoration: none;\n}\n\n.nav-list {\n  list-style: none;\n  display: flex;\n  justify-content: space-between; /* Space between items */\n  margin: 0;\n  padding: 0;\n}\n\n.nav-item {\n  margin-right: 15px;\n}\n\n.logout a {\n  color: #fff; /* White text color for logout link */\n}\n\n/* Navbar Styling */\n.navbar {\n  background-color: #000000;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n  width: 102%;\n}\n\n.card {\n  width: 18rem;\n  margin: 20px;\n  border: 1px solid #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n  background-color: #080808;\n  color: #ffffff;\n  text-decoration: solid;\n  font-weight: bold;\n}\n\n.card:hover {\n  transform: scale(1.05);\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.card-title {\n  font-size: 24px;\n  margin-bottom: 10px;\n}\n\n.card-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end; /* Align buttons at the bottom */\n  padding: 0 10px;\n  margin-bottom: 10%; /* Add margin-top to adjust vertical alignment */\n}\n\n.profile-stat {\n  width: 80px;\n  height: 80px;\n  background-color: #ffffff; /* You can change the color */\n  color: #000000;\n  font-size: 16px;\n  padding: 10px;\n}\n\n.dashboard-container {\n  display: flex;\n  background-image: url(../assets/Dashboard.jpeg);\n  background-size: cover;\n  background-repeat: repeat;\n  background-position: center center;\n  min-height: 100vh;\n\n  /* Set the height of the container to 100% of the viewport height */\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px; /* Add padding to create space for the sidebar */\n  margin-top: -19.8px;\n  margin-left: -20px;\n}\n\n.profile-card {\n  margin-top: 120px;\n  background-color: #000000; /* Card background color */\n  color: #fff; /* Text color */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border: 1px solid #ddd;\n  border-radius: 8px;\n}\n\n.heading-container {\n  background: linear-gradient(\n    to right,\n    #1f1f21,\n    #63646f\n  ); /* Gradient background */\n  border-radius: 10px; /* Rounded corners */\n\n  padding: 10px 20px; /* Padding */\n  margin-top: 20px;\n  margin-left: -40%;\n  margin-bottom: 10px; /* Margin bottom for spacing */\n  display: inline-block; /* Display as inline-block */\n  text-align: center; /* Center text horizontally */\n}\n\n.heading {\n  margin: 0;\n  font-size: 2rem;\n  color: #ffffff;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: bold;\n}\n.btn.btn-primary,\n.sidebar-link {\n  background-color: transparent;\n  border: none;\n  color: #aeaeae;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 1px;\n  outline: none;\n}\n\n.btn.btn-primary:hover,\n.btn.btn-primary:focus,\n.btn.btn-primary:active,\n.sidebar-link:hover {\n  background-color: transparent;\n  color: #ffffff; /* White text on hover, focus, and active */\n  border: none;\n  box-shadow: none; /* Remove any box-shadow */\n  text-decoration: none;\n}\n\n.nav-list {\n  list-style: none;\n  display: flex;\n  justify-content: space-between; /* Space between items */\n  margin: 0;\n  padding: 0;\n}\n\n.nav-item {\n  margin-right: 15px;\n}\n\n.logout a {\n  color: #fff; /* White text color for logout link */\n}\n\n/* Navbar Styling */\n.navbar {\n  background-color: #000000;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n  width: 102%;\n}\n\n.card {\n  width: 18rem;\n  margin: 20px;\n  border: 1px solid #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n  background-color: #080808;\n  color: #ffffff;\n  text-decoration: solid;\n  font-weight: bold;\n}\n\n.card-stats {\n  width: 30rem;\n  margin: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n}\n\n.card:hover {\n  transform: scale(1.05);\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.card-title {\n  font-size: 24px;\n  margin-bottom: 10px;\n}\n\n.card-link {\n  color: #007bff;\n  text-decoration: none;\n  font-weight: bold;\n  margin-right: 15px;\n  transition: color 0.3s ease-in-out;\n}\n\n.card-link:hover {\n  color: #0056b3;\n}\n\n.card-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end; /* Align buttons at the bottom */\n  padding: 0 10px;\n  margin-bottom: 10%; /* Add margin-top to adjust vertical alignment */\n}\n\n.card-link,\n.like-button,\n.playlist-button {\n  background: none;\n  border: none;\n  padding: 0;\n  font-family: inherit;\n  font-size: 2rem;\n  cursor: pointer;\n  text-align: left;\n  color: #007bff; /* Change to your preferred color */\n  transition: color 0.3s ease; /* Add a smooth transition effect */\n  position: relative; /* Enable positioning */\n}\n\n.playlist-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  left: -50px; /* Center horizontally */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n.card-link:hover::after,\n.like-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n.card-link:hover,\n.like-button:hover,\n.playlist-button:hover {\n  color: #0056b3; /* Change to your preferred hover color */\n}\n\n.error-message {\n  background-color: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n  border-radius: 5px;\n  padding: 10px;\n  margin-top: 10px;\n}\n\n.sidebar {\n  height: 100%;\n  width: 250px;\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  background-color: #000000;\n  padding-top: 20px;\n  color: #818181;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.sidebar-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.dashboard-container {\n  display: flex;\n  background-image: url(../assets/Dashboard.jpeg);\n  background-size: cover;\n  background-repeat: repeat;\n  background-position: center center;\n  min-height: 200vh;\n  /* Set the height of the container to 100% of the viewport height */\n}\n\n.image-container {\n  position: relative;\n}\n\n.image-container img {\n  width: 100%;\n  transition: filter 0.3s ease;\n}\n\n.rating-screen {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(\n    255,\n    255,\n    255,\n    0.9\n  ); /* Semi-transparent white background */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  pointer-events: none; /* Prevents interactions with the rating screen when hidden */\n  transition: opacity 0.3s ease;\n}\n\n.image-container:hover .rating-screen {\n  opacity: 1;\n  pointer-events: auto; /* Enable interactions with the rating screen on hover */\n}\n\n/* Style the stars for rating */\n.rating-stars {\n  font-size: 24px; /* Adjust size as needed */\n}\n\n/* Adjust styles for when the star is selected */\n.star.selected {\n  color: #ffbb00; /* Selected star color */\n}\n\n.star {\n  cursor: pointer;\n  color: #ddd; /* Default star color */\n}\n\n.star.filled {\n  color: #333; /* Filled star color */\n}\n\n.heading-container {\n  background: linear-gradient(\n    to right,\n    #1f1f21,\n    #63646f\n  ); /* Gradient background */\n  border-radius: 10px; /* Rounded corners */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Subtle shadow effect */\n  padding: 10px 20px; /* Padding */\n  margin-top: 20px;\n  margin-bottom: 10px; /* Margin bottom for spacing */\n  display: inline-block; /* Display as inline-block */\n  text-align: center; /* Center text horizontally */\n}\n\n.heading {\n  margin: 0;\n  font-size: 2rem;\n  color: #ffffff;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: bold;\n}\n.profile-stat {\n  width: 80px;\n  height: 80px;\n  background-color: #ffffff; /* You can change the color */\n  color: #000000;\n  font-size: 16px;\n  padding: 10px;\n}\n\n.profile-card {\n  margin-top: 120px;\n  background-color: #000000; /* Card background color */\n  color: #fff; /* Text color */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border: 1px solid #ddd;\n  border-radius: 8px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}