{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"newPlaylistVue\",\n  data() {\n    return {\n      Playlist_Name: \"\",\n      error: false\n    };\n  },\n  methods: {\n    reloadPage() {\n      window.location.reload(); // Reloads the current page\n    },\n    async createPlaylist() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/playlist\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            UserId: this.user.user_id,\n            UserName: this.user.user_name,\n            PlaylistName: this.Playlist_Name\n          })\n        });\n        if (response.ok) {\n          alert(\"Playlist created!\");\n          this.$router.push(\"/playlists\");\n        } else {\n          this.error = true;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    }\n  }\n};","map":{"version":3,"names":["name","data","Playlist_Name","error","methods","reloadPage","window","location","reload","createPlaylist","token","user","access_token","response","fetch","method","headers","Authorization","body","JSON","stringify","UserId","user_id","UserName","user_name","PlaylistName","ok","alert","$router","push","e","console","log","computed","parse","localStorage","getItem"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/newPlaylist.vue"],"sourcesContent":["<template>\n  <div\n    id=\"main\"\n    class=\"container-fluid d-flex justify-content-center align-items-center vh-100\"\n    v-if=\"!error\"\n  >\n    <form\n      @submit.prevent=\"createPlaylist\"\n      class=\"container p-5 rounded-lg shadow-lg custom-form\"\n    >\n      <h2 class=\"text-center mb-4\">Create Playlist</h2>\n\n      <div class=\"form-group\">\n        <label>Enter Playlist Name:</label>\n        <input\n          v-model=\"Playlist_Name\"\n          type=\"text\"\n          class=\"form-control\"\n          required\n        />\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\n    </form>\n  </div>\n\n  <div v-else class=\"error-message\">\n    <p class=\"text-danger\">Error Occurred!</p>\n    <router-link to=\"/\" class=\"btn btn-dark btn-sm\"\n      >Go Back to Login</router-link\n    >\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"newPlaylistVue\",\n  data() {\n    return {\n      Playlist_Name: \"\",\n      error: false,\n    };\n  },\n\n  methods: {\n    reloadPage() {\n      window.location.reload(); // Reloads the current page\n    },\n    async createPlaylist() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/playlist\", {\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${token}`,\n          },\n          body: JSON.stringify({\n            UserId: this.user.user_id,\n            UserName: this.user.user_name,\n            PlaylistName: this.Playlist_Name,\n          }),\n        });\n\n        if (response.ok) {\n          alert(\"Playlist created!\");\n          this.$router.push(\"/playlists\");\n        } else {\n          this.error = true;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n  },\n};\n</script>\n\n<style scoped>\n#main {\n  background-image: url(../assets/BG.png);\n  background-size: 100%;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n.custom-form {\n  background-color: #f8f9fa;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n  width: 30%;\n}\n\n.custom-form label {\n  font-weight: bold;\n  color: #495057;\n}\n\n.custom-form input {\n  border: 1px solid #ced4da;\n  border-radius: 5px;\n  padding: 8px;\n  margin-bottom: 10px;\n}\n\n.custom-form button {\n  background-color: #007bff;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.custom-form button:hover {\n  background-color: #0056b3;\n}\n\n.success-message,\n.error-message {\n  background-color: #f8f9fa;\n  border: 1px solid;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 10px;\n  text-align: center;\n}\n\n.error-message {\n  background-color: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n  border-radius: 5px;\n  padding: 10px;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AAkCA,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACXC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;IAC5B,CAAC;IACD,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,KAAI,GAAI,IAAI,CAACC,IAAI,CAACC,YAAY;QACpC,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAASP,KAAM;UACjC,CAAC;UACDQ,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,MAAM,EAAE,IAAI,CAACV,IAAI,CAACW,OAAO;YACzBC,QAAQ,EAAE,IAAI,CAACZ,IAAI,CAACa,SAAS;YAC7BC,YAAY,EAAE,IAAI,CAACvB;UACrB,CAAC;QACH,CAAC,CAAC;QAEF,IAAIW,QAAQ,CAACa,EAAE,EAAE;UACfC,KAAK,CAAC,mBAAmB,CAAC;UAC1B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL,IAAI,CAAC1B,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAO2B,CAAC,EAAE;QACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MAChB;IACF;EACF,CAAC;EACDG,QAAQ,EAAE;IACRtB,IAAIA,CAAA,EAAG;MACL,OAAOQ,IAAI,CAACe,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACjD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}