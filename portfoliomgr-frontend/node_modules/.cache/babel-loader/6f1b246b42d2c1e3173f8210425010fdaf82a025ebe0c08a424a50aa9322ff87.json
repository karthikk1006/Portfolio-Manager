{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nimport _imports_0 from '../assets/Play.png';\nconst _withScopeId = n => (_pushScopeId(\"data-v-95ff8942\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dashboard-container\"\n};\nconst _hoisted_2 = {\n  class: \"main-content\"\n};\nconst _hoisted_3 = {\n  class: \"navbar\"\n};\nconst _hoisted_4 = {\n  class: \"nav-list\"\n};\nconst _hoisted_5 = {\n  class: \"nav-item\"\n};\nconst _hoisted_6 = {\n  class: \"nav-item\"\n};\nconst _hoisted_7 = {\n  class: \"nav-list justify-content-end\"\n};\nconst _hoisted_8 = {\n  class: \"nav-item logout\"\n};\nconst _hoisted_9 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-wrap\": \"wrap\"\n  }\n};\nconst _hoisted_10 = {\n  class: \"card\",\n  style: {\n    \"width\": \"18rem\",\n    \"margin\": \"10px\"\n  }\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = {\n  key: 0,\n  class: \"rating-screen\"\n};\nconst _hoisted_13 = {\n  style: {\n    \"color\": \"black\"\n  }\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"color\": \"black\"\n  }\n}, \"Rate this song:\", -1 /* HOISTED */));\nconst _hoisted_15 = {\n  class: \"rating-stars\"\n};\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = {\n  key: 1,\n  class: \"rating-screen\"\n};\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"color\": \"black\"\n  }\n}, \"Already Rated!✅\", -1 /* HOISTED */));\nconst _hoisted_20 = [_hoisted_19];\nconst _hoisted_21 = {\n  class: \"card-body\"\n};\nconst _hoisted_22 = {\n  class: \"card-title\"\n};\nconst _hoisted_23 = {\n  class: \"card-buttons\"\n};\nconst _hoisted_24 = [\"onClick\"];\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  height: \"50px\",\n  weight: \"50px\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_26 = [_hoisted_25];\nconst _hoisted_27 = [\"onClick\"];\nconst _hoisted_28 = {\n  key: 0,\n  class: \"modal-overlay\"\n};\nconst _hoisted_29 = {\n  class: \"modal-content\",\n  style: {\n    \"background-color\": \"black\",\n    \"color\": \"#ffffff\",\n    \"outline\": \"2px solid white\"\n  }\n};\nconst _hoisted_30 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Select Playlist\", -1 /* HOISTED */));\nconst _hoisted_31 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"nav\", _hoisted_3, [_createElementVNode(\"ul\", _hoisted_4, [_createElementVNode(\"li\", _hoisted_5, [_createVNode(_component_router_link, {\n    to: \"/about\",\n    class: \"btn btn-primary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"About Us\")]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"li\", _hoisted_6, [_createVNode(_component_router_link, {\n    to: \"/dashboard\",\n    class: \"btn btn-primary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Dashboard\")]),\n    _: 1 /* STABLE */\n  })])]), _createElementVNode(\"ul\", _hoisted_7, [_createElementVNode(\"li\", _hoisted_8, [_createVNode(_component_router_link, {\n    to: \"/\",\n    class: \"btn btn-primary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Logout\")]),\n    _: 1 /* STABLE */\n  })])])]), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.songs, song => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: song.Song_ID,\n      class: \"card-wrapper\"\n    }, [_createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"div\", {\n      class: \"image-container\",\n      onMouseenter: _cache[0] || (_cache[0] = $event => $data.hovering = true),\n      onMouseleave: _cache[1] || (_cache[1] = $event => $data.hovering = false)\n    }, [_createElementVNode(\"img\", {\n      src: `http://127.0.0.1:5000/static/${song.Album_Image}`,\n      alt: \"Album Image\",\n      height: \"300px\"\n    }, null, 8 /* PROPS */, _hoisted_11), $data.hovering && !$data.rated ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"p\", _hoisted_13, \"Current rating : \" + _toDisplayString(song.Rating), 1 /* TEXT */), _hoisted_14, _createElementVNode(\"div\", _hoisted_15, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(5, index => {\n      return _createElementVNode(\"span\", {\n        key: index,\n        class: _normalizeClass([\"star\", {\n          filled: index <= $data.filledStars\n        }]),\n        onClick: $event => $options.setRating(index)\n      }, \" ★ \", 10 /* CLASS, PROPS */, _hoisted_16);\n    }), 64 /* STABLE_FRAGMENT */))]), _createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      style: {\n        \"color\": \"black\"\n      },\n      onClick: $event => $options.submitRating(song.Song_Name)\n    }, \" Submit Rating \", 8 /* PROPS */, _hoisted_17)])) : _createCommentVNode(\"v-if\", true), $data.hovering && $data.rated ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [..._hoisted_20])) : _createCommentVNode(\"v-if\", true)], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", _hoisted_21, [_createElementVNode(\"h3\", _hoisted_22, _toDisplayString(song.Song_Name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"From \" + _toDisplayString(song.Album_Name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"By \" + _toDisplayString(song.Creator_Name), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_23, [_createElementVNode(\"button\", {\n      onClick: $event => $options.getSongUrl(song),\n      class: \"card-link play-link\",\n      title: \"Play Song\"\n    }, [..._hoisted_26], 8 /* PROPS */, _hoisted_24), _createVNode(_component_router_link, {\n      class: \"like-button\",\n      to: $options.getFlagURL(song),\n      title: \"Flag/Report\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 🚩 \")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"button\", {\n      class: \"playlist-button\",\n      onClick: $event => $options.openModal(song.Song_ID),\n      title: \"+ Playlist\"\n    }, \" 📁 \", 8 /* PROPS */, _hoisted_27), $data.showModal && $data.currentSong == song.Song_ID ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_hoisted_30, _withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedPlaylist = $event)\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.playlists, playlist => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: playlist.Playlist_ID\n      }, _toDisplayString(playlist.Playlist_Name), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedPlaylist]]), _createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: $event => $options.addToPlaylist($data.selectedPlaylist, song.Song_ID)\n    }, \" Add to Playlist \", 8 /* PROPS */, _hoisted_31), _createElementVNode(\"button\", {\n      class: \"btn btn-primary\",\n      onClick: _cache[3] || (_cache[3] = (...args) => $options.closeModal && $options.closeModal(...args))\n    }, \" Close \")])])) : _createCommentVNode(\"v-if\", true)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_imports_0","class","style","key","_createElementVNode","_hoisted_19","src","height","weight","_hoisted_25","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_Fragment","_renderList","$options","songs","song","Song_ID","_hoisted_10","onMouseenter","_cache","$event","$data","hovering","onMouseleave","Album_Image","alt","_hoisted_11","rated","_hoisted_12","_hoisted_13","_toDisplayString","Rating","_hoisted_14","_hoisted_15","index","_normalizeClass","filled","filledStars","onClick","setRating","_hoisted_16","submitRating","Song_Name","_hoisted_17","_createCommentVNode","_hoisted_18","_hoisted_20","_hoisted_21","_hoisted_22","Album_Name","Creator_Name","_hoisted_23","getSongUrl","title","_hoisted_26","_hoisted_24","getFlagURL","openModal","_hoisted_27","showModal","currentSong","_hoisted_28","_hoisted_29","_hoisted_30","selectedPlaylist","playlists","playlist","Playlist_ID","Playlist_Name","addToPlaylist","_hoisted_31","args","closeModal"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/albumSongs.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"main-content\">\n      <nav class=\"navbar\">\n        <ul class=\"nav-list\">\n          <li class=\"nav-item\">\n            <router-link to=\"/about\" class=\"btn btn-primary\"\n              >About Us</router-link\n            >\n          </li>\n          <li class=\"nav-item\">\n            <router-link to=\"/dashboard\" class=\"btn btn-primary\"\n              >Dashboard</router-link\n            >\n          </li>\n        </ul>\n        <ul class=\"nav-list justify-content-end\">\n          <li class=\"nav-item logout\">\n            <router-link to=\"/\" class=\"btn btn-primary\">Logout</router-link>\n          </li>\n        </ul>\n      </nav>\n      <div style=\"display: flex; flex-wrap: wrap\">\n        <div v-for=\"song in songs\" :key=\"song.Song_ID\" class=\"card-wrapper\">\n          <div class=\"card\" style=\"width: 18rem; margin: 10px\">\n            <div\n              class=\"image-container\"\n              @mouseenter=\"hovering = true\"\n              @mouseleave=\"hovering = false\"\n            >\n              <img\n                :src=\"`http://127.0.0.1:5000/static/${song.Album_Image}`\"\n                alt=\"Album Image\"\n                height=\"300px\"\n              />\n              <div class=\"rating-screen\" v-if=\"hovering && !rated\">\n                <p style=\"color: black\">Current rating : {{ song.Rating }}</p>\n                <p style=\"color: black\">Rate this song:</p>\n\n                <div class=\"rating-stars\">\n                  <span\n                    v-for=\"index in 5\"\n                    :key=\"index\"\n                    class=\"star\"\n                    :class=\"{ filled: index <= filledStars }\"\n                    @click=\"setRating(index)\"\n                  >\n                    &#9733;\n                  </span>\n                </div>\n                <button\n                  class=\"btn btn-primary\"\n                  style=\"color: black\"\n                  @click=\"submitRating(song.Song_Name)\"\n                >\n                  Submit Rating\n                </button>\n              </div>\n\n              <div class=\"rating-screen\" v-if=\"hovering && rated\">\n                <p style=\"color: black\">Already Rated!✅</p>\n              </div>\n            </div>\n\n            <div class=\"card-body\">\n              <h3 class=\"card-title\">{{ song.Song_Name }}</h3>\n              <p>From {{ song.Album_Name }}</p>\n              <p>By {{ song.Creator_Name }}</p>\n            </div>\n\n            <div class=\"card-buttons\">\n              <button\n                @click=\"getSongUrl(song)\"\n                class=\"card-link play-link\"\n                title=\"Play Song\"\n              >\n                <img src=\"../assets/Play.png\" height=\"50px\" weight=\"50px\" />\n              </button>\n              <router-link\n                class=\"like-button\"\n                :to=\"getFlagURL(song)\"\n                title=\"Flag/Report\"\n              >\n                🚩\n              </router-link>\n              <button\n                class=\"playlist-button\"\n                @click=\"openModal(song.Song_ID)\"\n                title=\"+ Playlist\"\n              >\n                📁\n              </button>\n\n              <div\n                class=\"modal-overlay\"\n                v-if=\"showModal && currentSong == song.Song_ID\"\n              >\n                <div\n                  class=\"modal-content\"\n                  style=\"\n                    background-color: black;\n                    color: #ffffff;\n                    outline: 2px solid white;\n                  \"\n                >\n                  <h3>Select Playlist</h3>\n                  <select v-model=\"selectedPlaylist\">\n                    <option\n                      v-for=\"playlist in playlists\"\n                      :key=\"playlist.Playlist_ID\"\n                    >\n                      {{ playlist.Playlist_Name }}\n                    </option>\n                  </select>\n                  <button\n                    class=\"btn btn-primary\"\n                    @click=\"addToPlaylist(selectedPlaylist, song.Song_ID)\"\n                  >\n                    Add to Playlist\n                  </button>\n                  <button class=\"btn btn-primary\" @click=\"closeModal\">\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AlbumSongsVue\",\n  data() {\n    return {\n      selectedPlaylist: null,\n      showModal: false,\n      currentSong: null,\n      albumName: this.$route.params.album_name,\n      hovering: false,\n      filledStars: 0,\n      hoveredStars: 0,\n      rated: false,\n      flagged: false,\n    };\n  },\n  mounted() {\n    this.load();\n  },\n  methods: {\n    setRating(stars) {\n      this.filledStars = stars;\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged,\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    getFlagURL(song) {\n      return `/flag/${song.Song_ID}`;\n    },\n    async submitRating(song_name) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/rate\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            rating: this.filledStars,\n            songName: song_name,\n          }),\n        });\n        if (response.ok) {\n          this.rated = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    getSongUrl(song) {\n      localStorage.setItem(\"playSong\", JSON.stringify(song));\n\n      this.$router.push(`/song/${song.Song_Name}`);\n    },\n    openModal(song) {\n      this.currentSong = song;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async getPlaylists() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\n          `http://127.0.0.1:5000/api/playlist/${this.user.user_id}`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (response.ok) {\n          const res = await response.json();\n\n          this.music.playlists = res.playlists;\n          localStorage.setItem(\"music\", JSON.stringify(this.music));\n\n          this.$router.push(\"/playlists\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async addToPlaylist(playlist_name, song_id) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\n          \"http://127.0.0.1:5000/api/playlist/songs/\" + playlist_name,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n              Song_ID: song_id,\n              User_ID: this.user.user_id,\n              User_Name: this.user.user_name,\n            }),\n          }\n        );\n\n        if (response.ok) {\n          alert(\"Song added to playlist!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    songs() {\n      let filteredSongs = [];\n      for (const song of this.music.songs) {\n        if (song.Album_Name === this.albumName) {\n          filteredSongs.push(song);\n        }\n      }\n      return filteredSongs;\n    },\n    playlists() {\n      return this.music.playlists;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.btn.btn-primary,\n.sidebar-link {\n  background-color: transparent;\n  border: none;\n  color: #aeaeae;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 1px;\n  outline: none;\n}\n\n.btn.btn-primary:hover,\n.btn.btn-primary:focus,\n.btn.btn-primary:active,\n.sidebar-link:hover {\n  background-color: transparent;\n  color: #ffffff; /* White text on hover, focus, and active */\n  border: none;\n  box-shadow: none; /* Remove any box-shadow */\n  text-decoration: none;\n}\n\n.nav-list {\n  list-style: none;\n  display: flex;\n  justify-content: space-between; /* Space between items */\n  margin: 0;\n  padding: 0;\n}\n\n.nav-item {\n  margin-right: 15px;\n}\n\n.logout a {\n  color: #fff; /* White text color for logout link */\n}\n\n/* Navbar Styling */\n.navbar {\n  background-color: #000000;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n  width: 102%;\n}\n\n.card {\n  width: 18rem;\n  margin: 20px;\n  border: 1px solid #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n  background-color: #080808;\n  color: #ffffff;\n  text-decoration: solid;\n  font-weight: bold;\n}\n\n.card-stats {\n  width: 30rem;\n  margin: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n}\n\n.card:hover {\n  transform: scale(1.05);\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.card-title {\n  font-size: 24px;\n  margin-bottom: 10px;\n}\n\n.card-link {\n  color: #007bff;\n  text-decoration: none;\n  font-weight: bold;\n  margin-right: 15px;\n  transition: color 0.3s ease-in-out;\n}\n\n.card-link:hover {\n  color: #0056b3;\n}\n\n.card-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end; /* Align buttons at the bottom */\n  padding: 0 10px;\n  margin-bottom: 10%; /* Add margin-top to adjust vertical alignment */\n}\n\n.card-link,\n.like-button,\n.playlist-button {\n  background: none;\n  border: none;\n  padding: 0;\n  font-family: inherit;\n  font-size: 2rem;\n  cursor: pointer;\n  text-align: left;\n  color: #007bff; /* Change to your preferred color */\n  transition: color 0.3s ease; /* Add a smooth transition effect */\n  position: relative; /* Enable positioning */\n}\n\n.playlist-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  left: -50px; /* Center horizontally */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n.card-link:hover::after,\n.like-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n.card-link:hover,\n.like-button:hover,\n.playlist-button:hover {\n  color: #0056b3; /* Change to your preferred hover color */\n}\n\n.image-container {\n  position: relative;\n}\n\n.image-container img {\n  width: 100%;\n  transition: filter 0.3s ease;\n}\n\n.rating-screen {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(\n    255,\n    255,\n    255,\n    0.9\n  ); /* Semi-transparent white background */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  pointer-events: none; /* Prevents interactions with the rating screen when hidden */\n  transition: opacity 0.3s ease;\n}\n\n.image-container:hover .rating-screen {\n  opacity: 1;\n  pointer-events: auto; /* Enable interactions with the rating screen on hover */\n}\n\n/* Style the stars for rating */\n.rating-stars {\n  font-size: 24px; /* Adjust size as needed */\n}\n\n/* Adjust styles for when the star is selected */\n.star.selected {\n  color: #ffbb00; /* Selected star color */\n}\n\n.star {\n  cursor: pointer;\n  color: #ddd; /* Default star color */\n}\n\n.star.filled {\n  color: #333; /* Filled star color */\n}\n\n.dashboard-container {\n  display: flex;\n  background-image: url(../assets/Dashboard.jpeg);\n  background-size: cover;\n  background-repeat: repeat;\n  background-position: center center;\n  min-height: 100vh;\n\n  /* Set the height of the container to 100% of the viewport height */\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px; /* Add padding to create space for the sidebar */\n  margin-top: -19.8px;\n  margin-left: -20px;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}