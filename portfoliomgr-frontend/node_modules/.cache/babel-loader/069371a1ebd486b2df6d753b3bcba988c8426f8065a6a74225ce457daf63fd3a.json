{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { useStore } from \"../stores/store\";\nexport default {\n  name: \"PlaylistVue\",\n  data() {\n    return {\n      error: false,\n      loaded: false\n    };\n  },\n  mounted() {\n    this.load();\n  },\n  computed: {\n    userstore() {\n      return useStore();\n    },\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    allPlaylists() {\n      return this.music.playlists;\n    }\n  },\n  methods: {\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged\n          };\n          const new_music = {\n            new_music_data: res.new_music_data\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          localStorage.setItem(\"new_music\", JSON.stringify(new_music));\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    async deletePlaylist(playlist_id) {\n      const token = this.user.access_token;\n      const response = await fetch(\"http://127.0.0.1:5000/api/playlist/delete/\" + playlist_id, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        alert(\"Playlist deleted!\");\n        this.$router.push(\"/dashboard\");\n      } else {\n        this.error = true;\n      }\n    },\n    async getSongs(playlist_id) {\n      const token = this.user.access_token;\n      const response = await fetch(`http://127.0.0.1:5000/api/playlist/songs/${playlist_id}`, {\n        method: \"GET\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const res = await response.json();\n        const songs = res.playlistSongs;\n        localStorage.setItem(\"playlistSongs\", JSON.stringify(songs));\n        this.$router.push(\"/playlists/songs\");\n      } else {\n        this.error = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["useStore","name","data","error","loaded","mounted","load","computed","userstore","user","JSON","parse","localStorage","getItem","music","allPlaylists","playlists","methods","updateMusic","$forceUpdate","token","access_token","response","fetch","method","headers","Authorization","ok","res","json","songs","Songs","albums","Albums","Playlists","flagged","Flagged","new_music","new_music_data","setItem","stringify","deletePlaylist","playlist_id","alert","$router","push","getSongs","playlistSongs"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/Playlists.vue"],"sourcesContent":["<template>\n  <div v-if=\"!error\">\n    <div class=\"dashboard-container\">\n      <div class=\"sidebar\">\n        <div class=\"sidebar-header\">\n          <h3>{{ user.user_name }}'s Playlists</h3>\n        </div>\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n        <router-link to=\"/liked-songs\" class=\"sidebar-link\">\n          Liked Songs\n        </router-link>\n        <router-link to=\"/dashboard\" class=\"btn btn-primary\"\n          >Dashboard</router-link\n        >\n\n        <router-link to=\"/search\" class=\"sidebar-link\">Search üîç</router-link>\n      </div>\n\n      <div class=\"main-content\">\n        <nav class=\"navbar\">\n          <ul class=\"nav-list\">\n            <li class=\"nav-item\">\n              <router-link to=\"/about\" class=\"btn btn-primary\"\n                >About Us</router-link\n              >\n            </li>\n          </ul>\n          <ul class=\"nav-list justify-content-end\">\n            <li class=\"nav-item\">\n              <router-link to=\"/newPlaylist\" class=\"btn btn-primary\"\n                >+ Playlist</router-link\n              >\n            </li>\n            <li class=\"nav-item logout\">\n              <router-link to=\"/\" class=\"btn btn-primary\">Logout</router-link>\n            </li>\n          </ul>\n        </nav>\n\n        <div class=\"playlist-container\">\n          <div\n            v-for=\"playlist in allPlaylists\"\n            :key=\"playlist.Playlist_ID\"\n            class=\"card-wrapper\"\n          >\n            <div\n              class=\"card\"\n              style=\"\n                width: 18rem;\n                margin: 10px;\n                height: 15rem;\n                border-radius: 10px;\n                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n              \"\n            >\n              <div\n                class=\"card-body d-flex flex-column justify-content-center align-items-center\"\n              >\n                <h5 class=\"card-title mb-3\" style=\"font-size: 1.5rem\">\n                  {{ playlist.Playlist_Name }}\n                </h5>\n              </div>\n\n              <div class=\"card-buttons mt-auto\">\n                <button\n                  class=\"btn btn-light\"\n                  @click=\"getSongs(playlist.Playlist_ID)\"\n                >\n                  View Songs\n                </button>\n                <button\n                  class=\"btn btn-light ml-2\"\n                  @click=\"deletePlaylist(playlist.Playlist_ID)\"\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div v-else class=\"error-message\">\n    <p class=\"text-danger\">Error Occurred!</p>\n    <router-link to=\"/\" class=\"btn btn-dark btn-sm\"\n      >Go Back to Login</router-link\n    >\n  </div>\n</template>\n\n<script>\nimport { useStore } from \"../stores/store\";\nexport default {\n  name: \"PlaylistVue\",\n  data() {\n    return {\n      error: false,\n      loaded: false,\n    };\n  },\n  mounted() {\n    this.load();\n  },\n\n  computed: {\n    userstore() {\n      return useStore();\n    },\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    allPlaylists() {\n      return this.music.playlists;\n    },\n  },\n  methods: {\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged,\n          };\n          const new_music = {\n            new_music_data: res.new_music_data,\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          localStorage.setItem(\"new_music\", JSON.stringify(new_music));\n\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    async deletePlaylist(playlist_id) {\n      const token = this.user.access_token;\n      const response = await fetch(\n        \"http://127.0.0.1:5000/api/playlist/delete/\" + playlist_id,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (response.ok) {\n        alert(\"Playlist deleted!\");\n        this.$router.push(\"/dashboard\");\n      } else {\n        this.error = true;\n      }\n    },\n\n    async getSongs(playlist_id) {\n      const token = this.user.access_token;\n      const response = await fetch(\n        `http://127.0.0.1:5000/api/playlist/songs/${playlist_id}`,\n        {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (response.ok) {\n        const res = await response.json();\n        const songs = res.playlistSongs;\n        localStorage.setItem(\"playlistSongs\", JSON.stringify(songs));\n        this.$router.push(\"/playlists/songs\");\n      } else {\n        this.error = true;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.btn.btn-primary,\n.sidebar-link {\n  background-color: transparent;\n  border: none;\n  color: #aeaeae;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 1px;\n  outline: none;\n}\n\n.btn.btn-primary:hover,\n.btn.btn-primary:focus,\n.btn.btn-primary:active,\n.sidebar-link:hover {\n  background-color: transparent;\n  color: #ffffff; /* White text on hover, focus, and active */\n  border: none;\n  box-shadow: none; /* Remove any box-shadow */\n  text-decoration: none;\n}\n\n.nav-list {\n  list-style: none;\n  display: flex;\n  justify-content: space-between; /* Space between items */\n  margin: 0;\n  padding: 0;\n}\n\n.nav-item {\n  margin-right: 15px;\n}\n\n.logout a {\n  color: #fff; /* White text color for logout link */\n}\n\n/* Navbar Styling */\n.navbar {\n  background-color: #000000;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n  width: 102%;\n}\n\n.card {\n  width: 18rem;\n  margin: 20px;\n  border: 1px solid #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n  background-color: #080808;\n  color: #ffffff;\n  text-decoration: solid;\n  font-weight: bold;\n}\n\n.card:hover {\n  transform: scale(1.05);\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.card-title {\n  font-size: 24px;\n  margin-bottom: 10px;\n}\n\n.card-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end; /* Align buttons at the bottom */\n  padding: 0 10px;\n\n  margin-bottom: 10%; /* Add margin-top to adjust vertical alignment */\n}\n\n.error-message {\n  background-color: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n  border-radius: 5px;\n  padding: 10px;\n  margin-top: 10px;\n}\n\n.sidebar {\n  height: 100%;\n  width: 250px;\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  background-color: #000000;\n  padding-top: 20px;\n  color: #818181;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.sidebar-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.dashboard-container {\n  display: flex;\n  background-image: url(../assets/Dashboard.jpeg);\n  background-size: cover;\n  background-position: center;\n  width: 100vw;\n  height: 100vh;\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px;\n  margin-top: -19.8px;\n  margin-left: -20px;\n}\n.playlist-container {\n  margin-left: 20%;\n  display: flex;\n  flex-wrap: wrap;\n}\n.error-message {\n  background-color: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n  border-radius: 5px;\n  padding: 10px;\n  margin-top: 10px;\n}\n</style>\n"],"mappings":";AA6FA,SAASA,QAAO,QAAS,iBAAiB;AAC1C,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,KAAK;MACZC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,IAAI,CAAC,CAAC;EACb,CAAC;EAEDC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,OAAOR,QAAQ,CAAC,CAAC;IACnB,CAAC;IACDS,IAAIA,CAAA,EAAG;MACL,OAAOC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IACDC,KAAKA,CAAA,EAAG;MACN,OAAOJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IACDE,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACD,KAAK,CAACE,SAAS;IAC7B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,YAAY,CAAC,CAAC;IACrB,CAAC;IACD,MAAMb,IAAIA,CAAA,EAAG;MACX,IAAI;QACF,MAAMc,KAAI,GAAI,IAAI,CAACX,IAAI,CAACY,YAAY;QACpC,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACzDC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,KAAM;UACjC;QACF,CAAC,CAAC;QACF,IAAIE,QAAQ,CAACK,EAAE,EAAE;UACf,MAAMC,GAAE,GAAI,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;UACjC,MAAMf,KAAI,GAAI;YACZgB,KAAK,EAAEF,GAAG,CAACG,KAAK;YAChBC,MAAM,EAAEJ,GAAG,CAACK,MAAM;YAClBjB,SAAS,EAAEY,GAAG,CAACM,SAAS;YACxBC,OAAO,EAAEP,GAAG,CAACQ;UACf,CAAC;UACD,MAAMC,SAAQ,GAAI;YAChBC,cAAc,EAAEV,GAAG,CAACU;UACtB,CAAC;UACD1B,YAAY,CAAC2B,OAAO,CAAC,OAAO,EAAE7B,IAAI,CAAC8B,SAAS,CAAC1B,KAAK,CAAC,CAAC;UACpDF,YAAY,CAAC2B,OAAO,CAAC,WAAW,EAAE7B,IAAI,CAAC8B,SAAS,CAACH,SAAS,CAAC,CAAC;UAE5D,IAAI,CAACnB,WAAW,CAAC,CAAC;QACpB,OAAO;UACL,IAAI,CAACf,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,IAAI;MACnB;IACF,CAAC;IACD,MAAMsC,cAAcA,CAACC,WAAW,EAAE;MAChC,MAAMtB,KAAI,GAAI,IAAI,CAACX,IAAI,CAACY,YAAY;MACpC,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAC1B,4CAA2C,GAAImB,WAAW,EAC1D;QACElB,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASN,KAAM;QACjC;MACF,CACF,CAAC;MAED,IAAIE,QAAQ,CAACK,EAAE,EAAE;QACfgB,KAAK,CAAC,mBAAmB,CAAC;QAC1B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MACjC,OAAO;QACL,IAAI,CAAC1C,KAAI,GAAI,IAAI;MACnB;IACF,CAAC;IAED,MAAM2C,QAAQA,CAACJ,WAAW,EAAE;MAC1B,MAAMtB,KAAI,GAAI,IAAI,CAACX,IAAI,CAACY,YAAY;MACpC,MAAMC,QAAO,GAAI,MAAMC,KAAK,CACzB,4CAA2CmB,WAAY,EAAC,EACzD;QACElB,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASN,KAAM;QACjC;MACF,CACF,CAAC;MAED,IAAIE,QAAQ,CAACK,EAAE,EAAE;QACf,MAAMC,GAAE,GAAI,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QACjC,MAAMC,KAAI,GAAIF,GAAG,CAACmB,aAAa;QAC/BnC,YAAY,CAAC2B,OAAO,CAAC,eAAe,EAAE7B,IAAI,CAAC8B,SAAS,CAACV,KAAK,CAAC,CAAC;QAC5D,IAAI,CAACc,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC;MACvC,OAAO;QACL,IAAI,CAAC1C,KAAI,GAAI,IAAI;MACnB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}