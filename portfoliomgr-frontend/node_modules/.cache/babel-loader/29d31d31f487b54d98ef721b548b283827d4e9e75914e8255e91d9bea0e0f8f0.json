{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport Chart from \"chart.js/auto\";\nexport default {\n  name: \"DashboardVue\",\n  data() {\n    return {\n      error: false,\n      selectedPlaylist: null,\n      showModal: false,\n      currentSong: null,\n      hovering: false,\n      filledStars: 0,\n      hoveredStars: 0,\n      rated: false,\n      flagged: false,\n      no_of_users: 0,\n      no_of_creators: 0,\n      total_no_of_songs: 0,\n      total_no_of_albums: 0,\n      popular_creator: null,\n      pop_creator_songs: 0,\n      pop_creator_albums: 0,\n      pop_creator_profile: null,\n      errors: false\n    };\n  },\n  mounted() {\n    this.load();\n    if (this.user.role == \"admin\") {\n      this.createGraph();\n    }\n    this.getStats();\n  },\n  methods: {\n    async exportSongs() {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/export/songs`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${this.token}`\n          }\n        });\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"songs.csv\");\n        document.body.appendChild(link);\n        link.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(link);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getStats() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/stats\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          console.log(res);\n          this.no_of_users = res.users;\n          this.no_of_creators = res.creators;\n          this.total_no_of_songs = res.songs;\n          this.total_no_of_albums = res.albums;\n          this.popular_creator = res.popular_creator;\n          this.pop_creator_songs = res.pop_creator_songs;\n          this.pop_creator_albums = res.pop_creator_albums;\n          this.pop_creator_profile = res.pop_creator_profile;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    createGraph() {\n      // Get the canvas context\n      var songChart = document.getElementById(\"songChart\").getContext(\"2d\");\n      var albumChart = document.getElementById(\"albumChart\").getContext(\"2d\");\n      // Initialize arrays for song names and ratings\n      let songNames = [];\n      let songRatings = [];\n      let albumNames = [];\n      let albumRatings = [];\n\n      // Populate songNames and ratings arrays\n      for (const song of this.allSongs) {\n        songNames.push(song.Song_Name);\n        songRatings.push(song.Rating);\n      }\n      for (const album of this.allAlbums) {\n        albumNames.push(album.Album_Name);\n        albumRatings.push(album.Rating);\n      }\n\n      // Create the chart\n      new Chart(songChart, {\n        type: \"bar\",\n        data: {\n          labels: songNames,\n          datasets: [{\n            label: \"Rating\",\n            data: songRatings,\n            backgroundColor: \"skyblue\"\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              ticks: {\n                beginAtZero: true,\n                stepSize: 0.5,\n                max: 5\n              }\n            }\n          }\n        }\n      });\n      new Chart(albumChart, {\n        type: \"bar\",\n        data: {\n          labels: albumNames,\n          datasets: [{\n            label: \"Rating\",\n            data: albumRatings,\n            backgroundColor: \"skyblue\"\n          }]\n        },\n        options: {\n          scales: {\n            y: {\n              ticks: {\n                beginAtZero: true,\n                stepSize: 0.5,\n                max: 5\n              }\n            }\n          }\n        }\n      });\n    },\n    getAlbumURL(album_name) {\n      return `/album/${album_name}`;\n    },\n    getFlagURL(song) {\n      return `/flag/${song.Song_ID}`;\n    },\n    async submitRating(song_name) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/rate\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            rating: this.filledStars,\n            songName: song_name\n          })\n        });\n        if (response.ok) {\n          this.rated = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    setRating(stars) {\n      this.filledStars = stars;\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged\n          };\n          const new_music = {\n            new_music_data: res.new_music_data\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          localStorage.setItem(\"new_music\", JSON.stringify(new_music));\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    async getSongUrl(song) {\n      localStorage.setItem(\"playSong\", JSON.stringify(song));\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/listener/data\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            User_ID: this.user.user_id,\n            Song_ID: song.Song_ID\n          })\n        });\n        if (response.ok) {\n          this.$router.push(`/song/${song.Song_Name}`);\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    openModal(song) {\n      this.currentSong = song;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async getPlaylists() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(`http://127.0.0.1:5000/api/playlist/${this.user.user_id}`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          this.music.playlists = res.playlists;\n          localStorage.setItem(\"music\", JSON.stringify(this.music));\n          this.$router.push(\"/playlists\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async addToPlaylist(playlist_name, song_id) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/playlist/songs/\" + playlist_name, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n          },\n          body: JSON.stringify({\n            Song_ID: song_id,\n            User_ID: this.user.user_id,\n            User_Name: this.user.user_name\n          })\n        });\n        if (response.ok) {\n          alert(\"Song added to playlist!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    new_music() {\n      return JSON.parse(localStorage.getItem(\"new_music\"));\n    },\n    isCreator() {\n      if (this.user.role == \"creator\") {\n        return true;\n      }\n      return false;\n    },\n    isAdmin() {\n      if (this.user.role == \"admin\") {\n        return true;\n      }\n      return false;\n    },\n    isUser() {\n      if (this.user.role == \"user\") {\n        return true;\n      }\n      return false;\n    },\n    allSongs() {\n      return this.music.songs;\n    },\n    allAlbums() {\n      return this.music.albums;\n    },\n    playlists() {\n      return this.music.playlists;\n    },\n    no_of_songs() {\n      return this.music.songs.length;\n    },\n    no_of_albums() {\n      return this.music.albums.length;\n    },\n    new_music_data() {\n      return this.new_music.new_music_data;\n    }\n  }\n};","map":{"version":3,"names":["Chart","name","data","error","selectedPlaylist","showModal","currentSong","hovering","filledStars","hoveredStars","rated","flagged","no_of_users","no_of_creators","total_no_of_songs","total_no_of_albums","popular_creator","pop_creator_songs","pop_creator_albums","pop_creator_profile","errors","mounted","load","user","role","createGraph","getStats","methods","exportSongs","response","fetch","method","headers","Authorization","token","blob","url","window","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","revokeObjectURL","removeChild","console","log","access_token","ok","res","json","users","creators","songs","albums","songChart","getElementById","getContext","albumChart","songNames","songRatings","albumNames","albumRatings","song","allSongs","push","Song_Name","Rating","album","allAlbums","Album_Name","type","labels","datasets","label","backgroundColor","options","scales","y","ticks","beginAtZero","stepSize","max","getAlbumURL","album_name","getFlagURL","Song_ID","submitRating","song_name","JSON","stringify","rating","songName","setRating","stars","music","Songs","Albums","playlists","Playlists","Flagged","new_music","new_music_data","localStorage","setItem","updateMusic","$forceUpdate","getSongUrl","User_ID","user_id","$router","openModal","closeModal","getPlaylists","addToPlaylist","playlist_name","song_id","User_Name","user_name","alert","computed","parse","getItem","isCreator","isAdmin","isUser","no_of_songs","length","no_of_albums"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/Dashboard.vue"],"sourcesContent":["<template>\n  <div v-if=\"isUser\">\n    <div class=\"dashboard-container\">\n      <div class=\"sidebar\">\n        <div class=\"sidebar-header\">\n          <h2>{{ user.user_name }}'s Home</h2>\n        </div>\n        <br /><br /><br /><br /><br /><br /><br /><br /><br /><br />\n\n        <button class=\"btn btn-primary\" @click=\"getStockInfo\">\n          Stock Info\n        </button>\n      </div>\n\n      <div class=\"main-content\">\n        <nav class=\"navbar\">\n          <ul class=\"nav-list\"></ul>\n          <ul class=\"nav-list justify-content-end\">\n            <li class=\"nav-item\">\n              <router-link to=\"/userProfile\" class=\"btn btn-primary\"\n                >Profile</router-link\n              >\n            </li>\n\n            <li class=\"nav-item\">\n              <router-link to=\"/about\" class=\"btn btn-primary\"\n                >About Us</router-link\n              >\n            </li>\n            <li class=\"nav-item logout\">\n              <router-link to=\"/\" class=\"btn btn-primary\">Logout</router-link>\n            </li>\n          </ul>\n        </nav>\n\n        <div>\n          <div class=\"heading-container\">\n            <h2\n              class=\"heading\"\n              style=\"\n                font-size: 2rem;\n                margin-bottom: 10px;\n                margin-top: 10px;\n                color: #ffffff;\n                margin-left: 0;\n                text-transform: uppercase;\n                letter-spacing: 2px;\n                font-weight: bold;\n              \"\n            >\n              Stocks Owned\n            </h2>\n          </div>\n\n          <div style=\"display: flex; flex-wrap: wrap\">\n            <div\n              v-for=\"stock in allStocks\"\n              :key=\"song.Song_ID\"\n              class=\"card-wrapper\"\n            >\n              <div class=\"card\" style=\"width: 18rem; margin: 10px\">\n                <div\n                  class=\"image-container\"\n                  @mouseenter=\"hovering = true\"\n                  @mouseleave=\"hovering = false\"\n                >\n                  <img\n                    :src=\"`http://127.0.0.1:5000/static/${song.Album_Image}`\"\n                    alt=\"Album Image\"\n                    height=\"300px\"\n                  />\n                  <div class=\"rating-screen\" v-if=\"hovering && !rated\">\n                    <p style=\"color: black\">\n                      Current rating : {{ song.Rating }}\n                    </p>\n                    <p style=\"color: black\">Rate this song:</p>\n\n                    <div class=\"rating-stars\">\n                      <span\n                        v-for=\"index in 5\"\n                        :key=\"index\"\n                        class=\"star\"\n                        :class=\"{ filled: index <= filledStars }\"\n                        @click=\"setRating(index)\"\n                      >\n                        &#9733;\n                      </span>\n                    </div>\n                    <button\n                      class=\"btn btn-primary\"\n                      style=\"color: black\"\n                      @click=\"submitRating(song.Song_Name)\"\n                    >\n                      Submit Rating\n                    </button>\n                  </div>\n\n                  <div class=\"rating-screen\" v-if=\"hovering && rated\">\n                    <p style=\"color: black\">Already Rated!✅</p>\n                  </div>\n                </div>\n\n                <div class=\"card-body\">\n                  <h3 class=\"card-title\">{{ song.Song_Name }}</h3>\n                  <p>From {{ song.Album_Name }}</p>\n                  <p>By {{ song.Creator_Name }}</p>\n                </div>\n\n                <div class=\"card-buttons\">\n                  <button\n                    @click=\"getSongUrl(song)\"\n                    class=\"card-link play-link\"\n                    title=\"Play Song\"\n                  >\n                    <img src=\"../assets/Play.png\" height=\"50px\" weight=\"50px\" />\n                  </button>\n                  <router-link\n                    class=\"like-button\"\n                    :to=\"getFlagURL(song)\"\n                    title=\"Flag/Report\"\n                  >\n                    🚩\n                  </router-link>\n                  <button\n                    class=\"playlist-button\"\n                    @click=\"openModal(song.Song_ID)\"\n                    title=\"+ Playlist\"\n                  >\n                    📁\n                  </button>\n\n                  <div\n                    class=\"modal-overlay\"\n                    v-if=\"showModal && currentSong == song.Song_ID\"\n                  >\n                    <div\n                      class=\"modal-content\"\n                      style=\"\n                        background-color: black;\n                        color: #ffffff;\n                        outline: 2px solid white;\n                      \"\n                    >\n                      <h3>Select Playlist</h3>\n                      <select v-model=\"selectedPlaylist\">\n                        <option\n                          v-for=\"playlist in playlists\"\n                          :key=\"playlist.Playlist_ID\"\n                        >\n                          {{ playlist.Playlist_Name }}\n                        </option>\n                      </select>\n                      <button\n                        class=\"btn btn-primary\"\n                        @click=\"addToPlaylist(selectedPlaylist, song.Song_ID)\"\n                      >\n                        Add to Playlist\n                      </button>\n                      <button class=\"btn btn-primary\" @click=\"closeModal\">\n                        Close\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div v-if=\"allAlbums.length != 0\">\n          <div class=\"heading-container\">\n            <h2\n              class=\"heading\"\n              style=\"\n                font-size: 2rem;\n                margin-bottom: 10px;\n                margin-top: 10px;\n                color: #ffffff;\n                margin-left: 0;\n                text-transform: uppercase;\n                letter-spacing: 2px;\n                font-weight: bold;\n              \"\n            >\n              Albums\n            </h2>\n          </div>\n          <div style=\"display: flex; flex-wrap: wrap\">\n            <div\n              v-for=\"album in allAlbums\"\n              :key=\"album.Album_ID\"\n              class=\"card-wrapper\"\n            >\n              <div class=\"card\" style=\"width: 18rem; margin: 10px\">\n                <div\n                  class=\"image-container\"\n                  @mouseenter=\"hovering = true\"\n                  @mouseleave=\"hovering = false\"\n                >\n                  <img\n                    :src=\"`http://127.0.0.1:5000/static/${album.Album_Image}`\"\n                    alt=\"Album Image\"\n                    height=\"300px\"\n                  />\n                  <div class=\"rating-screen\" v-if=\"hovering\">\n                    <p style=\"color: black\">\n                      Current rating : {{ album.Rating }}\n                    </p>\n                  </div>\n                </div>\n                <div class=\"card-body\">\n                  <h5 class=\"card-title\">{{ album.Album_Name }}</h5>\n                </div>\n                <div\n                  class=\"card-buttons\"\n                  style=\"display: flex; justify-content: center\"\n                >\n                  <router-link\n                    class=\"btn btn-primary\"\n                    :to=\"getAlbumURL(album.Album_Name)\"\n                  >\n                    View Songs\n                  </router-link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div v-else class=\"error-message\">\n    <p class=\"text-danger\">LOGIN TO ACCESS DASHBOARD!</p>\n    <router-link to=\"/\" class=\"btn btn-dark btn-sm\"\n      >Go Back to Login</router-link\n    >\n  </div>\n</template>\n\n<script>\nimport Chart from \"chart.js/auto\";\nexport default {\n  name: \"DashboardVue\",\n\n  data() {\n    return {\n      error: false,\n      selectedPlaylist: null,\n      showModal: false,\n      currentSong: null,\n      hovering: false,\n      filledStars: 0,\n      hoveredStars: 0,\n      rated: false,\n      flagged: false,\n      no_of_users: 0,\n      no_of_creators: 0,\n      total_no_of_songs: 0,\n      total_no_of_albums: 0,\n      popular_creator: null,\n      pop_creator_songs: 0,\n      pop_creator_albums: 0,\n      pop_creator_profile: null,\n      errors: false,\n    };\n  },\n  mounted() {\n    this.load();\n    if (this.user.role == \"admin\") {\n      this.createGraph();\n    }\n    this.getStats();\n  },\n\n  methods: {\n    async exportSongs() {\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/export/songs`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${this.token}`,\n          },\n        });\n\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"songs.csv\");\n        document.body.appendChild(link);\n        link.click();\n\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(link);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getStats() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/stats\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (response.ok) {\n          const res = await response.json();\n          console.log(res);\n          this.no_of_users = res.users;\n          this.no_of_creators = res.creators;\n          this.total_no_of_songs = res.songs;\n          this.total_no_of_albums = res.albums;\n          this.popular_creator = res.popular_creator;\n          this.pop_creator_songs = res.pop_creator_songs;\n          this.pop_creator_albums = res.pop_creator_albums;\n          this.pop_creator_profile = res.pop_creator_profile;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    createGraph() {\n      // Get the canvas context\n      var songChart = document.getElementById(\"songChart\").getContext(\"2d\");\n      var albumChart = document.getElementById(\"albumChart\").getContext(\"2d\");\n      // Initialize arrays for song names and ratings\n      let songNames = [];\n      let songRatings = [];\n      let albumNames = [];\n      let albumRatings = [];\n\n      // Populate songNames and ratings arrays\n      for (const song of this.allSongs) {\n        songNames.push(song.Song_Name);\n        songRatings.push(song.Rating);\n      }\n\n      for (const album of this.allAlbums) {\n        albumNames.push(album.Album_Name);\n        albumRatings.push(album.Rating);\n      }\n\n      // Create the chart\n      new Chart(songChart, {\n        type: \"bar\",\n        data: {\n          labels: songNames,\n          datasets: [\n            {\n              label: \"Rating\",\n              data: songRatings,\n              backgroundColor: \"skyblue\",\n            },\n          ],\n        },\n        options: {\n          scales: {\n            y: {\n              ticks: {\n                beginAtZero: true,\n                stepSize: 0.5,\n                max: 5,\n              },\n            },\n          },\n        },\n      });\n\n      new Chart(albumChart, {\n        type: \"bar\",\n        data: {\n          labels: albumNames,\n          datasets: [\n            {\n              label: \"Rating\",\n              data: albumRatings,\n              backgroundColor: \"skyblue\",\n            },\n          ],\n        },\n        options: {\n          scales: {\n            y: {\n              ticks: {\n                beginAtZero: true,\n                stepSize: 0.5,\n                max: 5,\n              },\n            },\n          },\n        },\n      });\n    },\n\n    getAlbumURL(album_name) {\n      return `/album/${album_name}`;\n    },\n    getFlagURL(song) {\n      return `/flag/${song.Song_ID}`;\n    },\n    async submitRating(song_name) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/api/rate\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            rating: this.filledStars,\n            songName: song_name,\n          }),\n        });\n        if (response.ok) {\n          this.rated = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    setRating(stars) {\n      this.filledStars = stars;\n    },\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n            flagged: res.Flagged,\n          };\n          const new_music = {\n            new_music_data: res.new_music_data,\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          localStorage.setItem(\"new_music\", JSON.stringify(new_music));\n\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    updateMusic() {\n      this.$forceUpdate();\n    },\n\n    async getSongUrl(song) {\n      localStorage.setItem(\"playSong\", JSON.stringify(song));\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/listener/data\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            User_ID: this.user.user_id,\n            Song_ID: song.Song_ID,\n          }),\n        });\n\n        if (response.ok) {\n          this.$router.push(`/song/${song.Song_Name}`);\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n\n    openModal(song) {\n      this.currentSong = song;\n      this.showModal = true;\n    },\n    closeModal() {\n      this.showModal = false;\n    },\n    async getPlaylists() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\n          `http://127.0.0.1:5000/api/playlist/${this.user.user_id}`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (response.ok) {\n          const res = await response.json();\n\n          this.music.playlists = res.playlists;\n          localStorage.setItem(\"music\", JSON.stringify(this.music));\n\n          this.$router.push(\"/playlists\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async addToPlaylist(playlist_name, song_id) {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\n          \"http://127.0.0.1:5000/api/playlist/songs/\" + playlist_name,\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n              Song_ID: song_id,\n              User_ID: this.user.user_id,\n              User_Name: this.user.user_name,\n            }),\n          }\n        );\n\n        if (response.ok) {\n          alert(\"Song added to playlist!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    new_music() {\n      return JSON.parse(localStorage.getItem(\"new_music\"));\n    },\n    isCreator() {\n      if (this.user.role == \"creator\") {\n        return true;\n      }\n      return false;\n    },\n    isAdmin() {\n      if (this.user.role == \"admin\") {\n        return true;\n      }\n      return false;\n    },\n    isUser() {\n      if (this.user.role == \"user\") {\n        return true;\n      }\n      return false;\n    },\n    allSongs() {\n      return this.music.songs;\n    },\n    allAlbums() {\n      return this.music.albums;\n    },\n    playlists() {\n      return this.music.playlists;\n    },\n    no_of_songs() {\n      return this.music.songs.length;\n    },\n    no_of_albums() {\n      return this.music.albums.length;\n    },\n    new_music_data() {\n      return this.new_music.new_music_data;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.btn.btn-primary,\n.sidebar-link {\n  background-color: transparent;\n  border: none;\n  color: #aeaeae;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 1px;\n  outline: none;\n}\n\n.btn.btn-primary:hover,\n.btn.btn-primary:focus,\n.btn.btn-primary:active,\n.sidebar-link:hover {\n  background-color: transparent;\n  color: #ffffff; /* White text on hover, focus, and active */\n  border: none;\n  box-shadow: none; /* Remove any box-shadow */\n  text-decoration: none;\n}\n\n.nav-list {\n  list-style: none;\n  display: flex;\n  justify-content: space-between; /* Space between items */\n  margin: 0;\n  padding: 0;\n}\n\n.nav-item {\n  margin-right: 15px;\n}\n\n.logout a {\n  color: #fff; /* White text color for logout link */\n}\n\n/* Navbar Styling */\n.navbar {\n  background-color: #000000;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n  width: 102%;\n}\n\n.card {\n  width: 18rem;\n  margin: 20px;\n  border: 1px solid #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n  background-color: #080808;\n  color: #ffffff;\n  text-decoration: solid;\n  font-weight: bold;\n}\n\n.card-stats {\n  width: 30rem;\n  margin: 20px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n}\n\n.card:hover {\n  transform: scale(1.05);\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.card-title {\n  font-size: 24px;\n  margin-bottom: 10px;\n}\n\n.card-link {\n  color: #007bff;\n  text-decoration: none;\n  font-weight: bold;\n  margin-right: 15px;\n  transition: color 0.3s ease-in-out;\n}\n\n.card-link:hover {\n  color: #0056b3;\n}\n\n.card-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end; /* Align buttons at the bottom */\n  padding: 0 10px;\n  margin-bottom: 10%; /* Add margin-top to adjust vertical alignment */\n}\n\n.card-link,\n.like-button,\n.playlist-button {\n  background: none;\n  border: none;\n  padding: 0;\n  font-family: inherit;\n  font-size: 2rem;\n  cursor: pointer;\n  text-align: left;\n  color: #007bff; /* Change to your preferred color */\n  transition: color 0.3s ease; /* Add a smooth transition effect */\n  position: relative; /* Enable positioning */\n}\n\n.playlist-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  left: -50px; /* Center horizontally */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n.card-link:hover::after,\n.like-button:hover::after {\n  content: attr(title);\n  position: absolute;\n  top: -10px; /* Adjust the distance above the symbol */\n  background-color: #333;\n  color: #fff;\n  padding: 2px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n}\n.card-link:hover,\n.like-button:hover,\n.playlist-button:hover {\n  color: #0056b3; /* Change to your preferred hover color */\n}\n\n.error-message {\n  background-color: #f8d7da;\n  color: #721c24;\n  border: 1px solid #f5c6cb;\n  border-radius: 5px;\n  padding: 10px;\n  margin-top: 10px;\n}\n\n.sidebar {\n  height: 100%;\n  width: 250px;\n  position: fixed;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  background-color: #000000;\n  padding-top: 20px;\n  color: #818181;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.sidebar-header {\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.dashboard-container {\n  display: flex;\n  background-image: url(../assets/Dashboard.jpeg);\n  background-size: cover;\n  background-repeat: repeat;\n  background-position: center center;\n  min-height: 200vh;\n  /* Set the height of the container to 100% of the viewport height */\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px; /* Add padding to create space for the sidebar */\n  margin-top: -19.8px;\n  margin-left: 230px;\n}\n.image-container {\n  position: relative;\n}\n\n.image-container img {\n  width: 100%;\n  transition: filter 0.3s ease;\n}\n\n.rating-screen {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(\n    255,\n    255,\n    255,\n    0.9\n  ); /* Semi-transparent white background */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  pointer-events: none; /* Prevents interactions with the rating screen when hidden */\n  transition: opacity 0.3s ease;\n}\n\n.image-container:hover .rating-screen {\n  opacity: 1;\n  pointer-events: auto; /* Enable interactions with the rating screen on hover */\n}\n\n/* Style the stars for rating */\n.rating-stars {\n  font-size: 24px; /* Adjust size as needed */\n}\n\n/* Adjust styles for when the star is selected */\n.star.selected {\n  color: #ffbb00; /* Selected star color */\n}\n\n.star {\n  cursor: pointer;\n  color: #ddd; /* Default star color */\n}\n\n.star.filled {\n  color: #333; /* Filled star color */\n}\n\n.heading-container {\n  background: linear-gradient(\n    to right,\n    #1f1f21,\n    #63646f\n  ); /* Gradient background */\n  border-radius: 10px; /* Rounded corners */\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* Subtle shadow effect */\n  padding: 10px 20px; /* Padding */\n  margin-top: 20px;\n  margin-bottom: 10px; /* Margin bottom for spacing */\n  display: inline-block; /* Display as inline-block */\n  text-align: center; /* Center text horizontally */\n}\n\n.heading {\n  margin: 0;\n  font-size: 2rem;\n  color: #ffffff;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: bold;\n}\n.profile-stat {\n  width: 80px;\n  height: 80px;\n  background-color: #ffffff; /* You can change the color */\n  color: #000000;\n  font-size: 16px;\n  padding: 10px;\n}\n\n.profile-card {\n  margin-top: 120px;\n  background-color: #000000; /* Card background color */\n  color: #fff; /* Text color */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border: 1px solid #ddd;\n  border-radius: 8px;\n}\n</style>\n"],"mappings":";;;;AAiPA,OAAOA,KAAI,MAAO,eAAe;AACjC,eAAe;EACbC,IAAI,EAAE,cAAc;EAEpBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,KAAK;MACZC,gBAAgB,EAAE,IAAI;MACtBC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE,IAAI;MACjBC,QAAQ,EAAE,KAAK;MACfC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,CAAC;MACfC,KAAK,EAAE,KAAK;MACZC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE,CAAC;MACdC,cAAc,EAAE,CAAC;MACjBC,iBAAiB,EAAE,CAAC;MACpBC,kBAAkB,EAAE,CAAC;MACrBC,eAAe,EAAE,IAAI;MACrBC,iBAAiB,EAAE,CAAC;MACpBC,kBAAkB,EAAE,CAAC;MACrBC,mBAAmB,EAAE,IAAI;MACzBC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,IAAI,CAAC,CAAC;IACX,IAAI,IAAI,CAACC,IAAI,CAACC,IAAG,IAAK,OAAO,EAAE;MAC7B,IAAI,CAACC,WAAW,CAAC,CAAC;IACpB;IACA,IAAI,CAACC,QAAQ,CAAC,CAAC;EACjB,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAE,oCAAmC,EAAE;UACjEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAG,UAAS,IAAI,CAACC,KAAM;UACtC;QACF,CAAC,CAAC;QAEF,MAAMC,IAAG,GAAI,MAAMN,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,MAAMC,GAAE,GAAIC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;QAE5C,MAAMK,IAAG,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACxCF,IAAI,CAACG,IAAG,GAAIP,GAAG;QACfI,IAAI,CAACI,YAAY,CAAC,UAAU,EAAE,WAAW,CAAC;QAC1CH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;QAC/BA,IAAI,CAACO,KAAK,CAAC,CAAC;QAEZV,MAAM,CAACC,GAAG,CAACU,eAAe,CAACZ,GAAG,CAAC;QAC/BK,QAAQ,CAACI,IAAI,CAACI,WAAW,CAACT,IAAI,CAAC;MACjC,EAAE,OAAOrC,KAAK,EAAE;QACd+C,OAAO,CAACC,GAAG,CAAChD,KAAK,CAAC;MACpB;IACF,CAAC;IACD,MAAMuB,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMQ,KAAI,GAAI,IAAI,CAACX,IAAI,CAAC6B,YAAY;QACpC,MAAMvB,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC1DC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASC,KAAM;UACjC;QACF,CAAC,CAAC;QACF,IAAIL,QAAQ,CAACwB,EAAE,EAAE;UACf,MAAMC,GAAE,GAAI,MAAMzB,QAAQ,CAAC0B,IAAI,CAAC,CAAC;UACjCL,OAAO,CAACC,GAAG,CAACG,GAAG,CAAC;UAChB,IAAI,CAAC1C,WAAU,GAAI0C,GAAG,CAACE,KAAK;UAC5B,IAAI,CAAC3C,cAAa,GAAIyC,GAAG,CAACG,QAAQ;UAClC,IAAI,CAAC3C,iBAAgB,GAAIwC,GAAG,CAACI,KAAK;UAClC,IAAI,CAAC3C,kBAAiB,GAAIuC,GAAG,CAACK,MAAM;UACpC,IAAI,CAAC3C,eAAc,GAAIsC,GAAG,CAACtC,eAAe;UAC1C,IAAI,CAACC,iBAAgB,GAAIqC,GAAG,CAACrC,iBAAiB;UAC9C,IAAI,CAACC,kBAAiB,GAAIoC,GAAG,CAACpC,kBAAkB;UAChD,IAAI,CAACC,mBAAkB,GAAImC,GAAG,CAACnC,mBAAmB;QACpD,OAAO;UACL,IAAI,CAAChB,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd+C,OAAO,CAACC,GAAG,CAAChD,KAAK,CAAC;MACpB;IACF,CAAC;IACDsB,WAAWA,CAAA,EAAG;MACZ;MACA,IAAImC,SAAQ,GAAInB,QAAQ,CAACoB,cAAc,CAAC,WAAW,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;MACrE,IAAIC,UAAS,GAAItB,QAAQ,CAACoB,cAAc,CAAC,YAAY,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;MACvE;MACA,IAAIE,SAAQ,GAAI,EAAE;MAClB,IAAIC,WAAU,GAAI,EAAE;MACpB,IAAIC,UAAS,GAAI,EAAE;MACnB,IAAIC,YAAW,GAAI,EAAE;;MAErB;MACA,KAAK,MAAMC,IAAG,IAAK,IAAI,CAACC,QAAQ,EAAE;QAChCL,SAAS,CAACM,IAAI,CAACF,IAAI,CAACG,SAAS,CAAC;QAC9BN,WAAW,CAACK,IAAI,CAACF,IAAI,CAACI,MAAM,CAAC;MAC/B;MAEA,KAAK,MAAMC,KAAI,IAAK,IAAI,CAACC,SAAS,EAAE;QAClCR,UAAU,CAACI,IAAI,CAACG,KAAK,CAACE,UAAU,CAAC;QACjCR,YAAY,CAACG,IAAI,CAACG,KAAK,CAACD,MAAM,CAAC;MACjC;;MAEA;MACA,IAAIxE,KAAK,CAAC4D,SAAS,EAAE;QACnBgB,IAAI,EAAE,KAAK;QACX1E,IAAI,EAAE;UACJ2E,MAAM,EAAEb,SAAS;UACjBc,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,QAAQ;YACf7E,IAAI,EAAE+D,WAAW;YACjBe,eAAe,EAAE;UACnB,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,KAAK,EAAE;gBACLC,WAAW,EAAE,IAAI;gBACjBC,QAAQ,EAAE,GAAG;gBACbC,GAAG,EAAE;cACP;YACF;UACF;QACF;MACF,CAAC,CAAC;MAEF,IAAIvF,KAAK,CAAC+D,UAAU,EAAE;QACpBa,IAAI,EAAE,KAAK;QACX1E,IAAI,EAAE;UACJ2E,MAAM,EAAEX,UAAU;UAClBY,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,QAAQ;YACf7E,IAAI,EAAEiE,YAAY;YAClBa,eAAe,EAAE;UACnB,CAAC;QAEL,CAAC;QACDC,OAAO,EAAE;UACPC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,KAAK,EAAE;gBACLC,WAAW,EAAE,IAAI;gBACjBC,QAAQ,EAAE,GAAG;gBACbC,GAAG,EAAE;cACP;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ,CAAC;IAEDC,WAAWA,CAACC,UAAU,EAAE;MACtB,OAAQ,UAASA,UAAW,EAAC;IAC/B,CAAC;IACDC,UAAUA,CAACtB,IAAI,EAAE;MACf,OAAQ,SAAQA,IAAI,CAACuB,OAAQ,EAAC;IAChC,CAAC;IACD,MAAMC,YAAYA,CAACC,SAAS,EAAE;MAC5B,IAAI;QACF,MAAM3D,KAAI,GAAI,IAAI,CAACX,IAAI,CAAC6B,YAAY;QACpC,MAAMvB,QAAO,GAAI,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UAC7DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASC,KAAM,EAAC;YAChC,cAAc,EAAE;UAClB,CAAC;UACDW,IAAI,EAAEiD,IAAI,CAACC,SAAS,CAAC;YACnBC,MAAM,EAAE,IAAI,CAACxF,WAAW;YACxByF,QAAQ,EAAEJ;UACZ,CAAC;QACH,CAAC,CAAC;QACF,IAAIhE,QAAQ,CAACwB,EAAE,EAAE;UACf,IAAI,CAAC3C,KAAI,GAAI,IAAI;QACnB,OAAO;UACL,IAAI,CAACP,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,IAAI;MACnB;IACF,CAAC;IACD+F,SAASA,CAACC,KAAK,EAAE;MACf,IAAI,CAAC3F,WAAU,GAAI2F,KAAK;IAC1B,CAAC;IACD,MAAM7E,IAAIA,CAAA,EAAG;MACX,IAAI;QACF,MAAMY,KAAI,GAAI,IAAI,CAACX,IAAI,CAAC6B,YAAY;QACpC,MAAMvB,QAAO,GAAI,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACzDC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASC,KAAM;UACjC;QACF,CAAC,CAAC;QACF,IAAIL,QAAQ,CAACwB,EAAE,EAAE;UACf,MAAMC,GAAE,GAAI,MAAMzB,QAAQ,CAAC0B,IAAI,CAAC,CAAC;UACjC,MAAM6C,KAAI,GAAI;YACZ1C,KAAK,EAAEJ,GAAG,CAAC+C,KAAK;YAChB1C,MAAM,EAAEL,GAAG,CAACgD,MAAM;YAClBC,SAAS,EAAEjD,GAAG,CAACkD,SAAS;YACxB7F,OAAO,EAAE2C,GAAG,CAACmD;UACf,CAAC;UACD,MAAMC,SAAQ,GAAI;YAChBC,cAAc,EAAErD,GAAG,CAACqD;UACtB,CAAC;UACDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEf,IAAI,CAACC,SAAS,CAACK,KAAK,CAAC,CAAC;UACpDQ,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEf,IAAI,CAACC,SAAS,CAACW,SAAS,CAAC,CAAC;UAE5D,IAAI,CAACI,WAAW,CAAC,CAAC;QACpB,OAAO;UACL,IAAI,CAAC3G,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,IAAI;MACnB;IACF,CAAC;IACD2G,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,YAAY,CAAC,CAAC;IACrB,CAAC;IAED,MAAMC,UAAUA,CAAC5C,IAAI,EAAE;MACrBwC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEf,IAAI,CAACC,SAAS,CAAC3B,IAAI,CAAC,CAAC;MACtD,IAAI;QACF,MAAMlC,KAAI,GAAI,IAAI,CAACX,IAAI,CAAC6B,YAAY;QACpC,MAAMvB,QAAO,GAAI,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAClEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASC,KAAM,EAAC;YAChC,cAAc,EAAE;UAClB,CAAC;UACDW,IAAI,EAAEiD,IAAI,CAACC,SAAS,CAAC;YACnBkB,OAAO,EAAE,IAAI,CAAC1F,IAAI,CAAC2F,OAAO;YAC1BvB,OAAO,EAAEvB,IAAI,CAACuB;UAChB,CAAC;QACH,CAAC,CAAC;QAEF,IAAI9D,QAAQ,CAACwB,EAAE,EAAE;UACf,IAAI,CAAC8D,OAAO,CAAC7C,IAAI,CAAE,SAAQF,IAAI,CAACG,SAAU,EAAC,CAAC;QAC9C,OAAO;UACL,IAAI,CAACpE,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,IAAI;MACnB;IACF,CAAC;IAEDiH,SAASA,CAAChD,IAAI,EAAE;MACd,IAAI,CAAC9D,WAAU,GAAI8D,IAAI;MACvB,IAAI,CAAC/D,SAAQ,GAAI,IAAI;IACvB,CAAC;IACDgH,UAAUA,CAAA,EAAG;MACX,IAAI,CAAChH,SAAQ,GAAI,KAAK;IACxB,CAAC;IACD,MAAMiH,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMpF,KAAI,GAAI,IAAI,CAACX,IAAI,CAAC6B,YAAY;QACpC,MAAMvB,QAAO,GAAI,MAAMC,KAAK,CACzB,sCAAqC,IAAI,CAACP,IAAI,CAAC2F,OAAQ,EAAC,EACzD;UACEnF,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASC,KAAM;UACjC;QACF,CACF,CAAC;QAED,IAAIL,QAAQ,CAACwB,EAAE,EAAE;UACf,MAAMC,GAAE,GAAI,MAAMzB,QAAQ,CAAC0B,IAAI,CAAC,CAAC;UAEjC,IAAI,CAAC6C,KAAK,CAACG,SAAQ,GAAIjD,GAAG,CAACiD,SAAS;UACpCK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEf,IAAI,CAACC,SAAS,CAAC,IAAI,CAACK,KAAK,CAAC,CAAC;UAEzD,IAAI,CAACe,OAAO,CAAC7C,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL,IAAI,CAACnE,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd+C,OAAO,CAACC,GAAG,CAAChD,KAAK,CAAC;MACpB;IACF,CAAC;IAED,MAAMoH,aAAaA,CAACC,aAAa,EAAEC,OAAO,EAAE;MAC1C,IAAI;QACF,MAAMvF,KAAI,GAAI,IAAI,CAACX,IAAI,CAAC6B,YAAY;QACpC,MAAMvB,QAAO,GAAI,MAAMC,KAAK,CAC1B,2CAA0C,GAAI0F,aAAa,EAC3D;UACEzF,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAASC,KAAM;UACjC,CAAC;UACDW,IAAI,EAAEiD,IAAI,CAACC,SAAS,CAAC;YACnBJ,OAAO,EAAE8B,OAAO;YAChBR,OAAO,EAAE,IAAI,CAAC1F,IAAI,CAAC2F,OAAO;YAC1BQ,SAAS,EAAE,IAAI,CAACnG,IAAI,CAACoG;UACvB,CAAC;QACH,CACF,CAAC;QAED,IAAI9F,QAAQ,CAACwB,EAAE,EAAE;UACfuE,KAAK,CAAC,yBAAyB,CAAC;UAChC,IAAI,CAACT,OAAO,CAAC7C,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL,IAAI,CAACnE,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd+C,OAAO,CAACC,GAAG,CAAChD,KAAK,CAAC;MACpB;IACF;EACF,CAAC;EACD0H,QAAQ,EAAE;IACRtG,IAAIA,CAAA,EAAG;MACL,OAAOuE,IAAI,CAACgC,KAAK,CAAClB,YAAY,CAACmB,OAAO,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IACD3B,KAAKA,CAAA,EAAG;MACN,OAAON,IAAI,CAACgC,KAAK,CAAClB,YAAY,CAACmB,OAAO,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IACDrB,SAASA,CAAA,EAAG;MACV,OAAOZ,IAAI,CAACgC,KAAK,CAAClB,YAAY,CAACmB,OAAO,CAAC,WAAW,CAAC,CAAC;IACtD,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,IAAI,IAAI,CAACzG,IAAI,CAACC,IAAG,IAAK,SAAS,EAAE;QAC/B,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC;IACDyG,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAAC1G,IAAI,CAACC,IAAG,IAAK,OAAO,EAAE;QAC7B,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC;IACD0G,MAAMA,CAAA,EAAG;MACP,IAAI,IAAI,CAAC3G,IAAI,CAACC,IAAG,IAAK,MAAM,EAAE;QAC5B,OAAO,IAAI;MACb;MACA,OAAO,KAAK;IACd,CAAC;IACD6C,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAAC+B,KAAK,CAAC1C,KAAK;IACzB,CAAC;IACDgB,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAAC0B,KAAK,CAACzC,MAAM;IAC1B,CAAC;IACD4C,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACH,KAAK,CAACG,SAAS;IAC7B,CAAC;IACD4B,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAAC/B,KAAK,CAAC1C,KAAK,CAAC0E,MAAM;IAChC,CAAC;IACDC,YAAYA,CAAA,EAAG;MACb,OAAO,IAAI,CAACjC,KAAK,CAACzC,MAAM,CAACyE,MAAM;IACjC,CAAC;IACDzB,cAAcA,CAAA,EAAG;MACf,OAAO,IAAI,CAACD,SAAS,CAACC,cAAc;IACtC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}