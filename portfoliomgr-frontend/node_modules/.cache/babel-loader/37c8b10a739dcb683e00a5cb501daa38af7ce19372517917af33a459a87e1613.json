{"ast":null,"code":"import { BASE_URL } from \"@/assets/constants.js\";\nexport default {\n  data() {\n    return {\n      UserName: \"\",\n      UserEmail: \"\",\n      UserPswd: \"\",\n      ConfPswd: \"\",\n      PswdMisMatch: false,\n      success: false,\n      error: false\n    };\n  },\n  watch: {\n    UserPswd() {\n      this.validatePasswords();\n    },\n    ConfPswd() {\n      this.validatePasswords();\n    }\n  },\n  methods: {\n    validatePasswords() {\n      this.PswdMisMatch = this.UserPswd !== this.ConfPswd;\n    },\n    async Signup() {\n      try {\n        console.log(this.UserEmail);\n        const response = await fetch(`${BASE_URL}/createuser`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            name: this.UserName,\n            role: \"user\",\n            email: this.UserEmail,\n            password: this.UserPswd\n          })\n        });\n        if (response.ok) {\n          this.success = true;\n          this.error = false;\n        } else {\n          this.error = true;\n          this.success = false;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n};","map":{"version":3,"names":["BASE_URL","data","UserName","UserEmail","UserPswd","ConfPswd","PswdMisMatch","success","error","watch","validatePasswords","methods","Signup","console","log","response","fetch","method","headers","body","JSON","stringify","name","role","email","password","ok","e"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/SignUp.vue"],"sourcesContent":["<template>\n  <div\n    id=\"main\"\n    class=\"container-fluid d-flex justify-content-center align-items-center vh-100\"\n  >\n    <form\n      @submit.prevent=\"Signup\"\n      class=\"container p-5 rounded-lg shadow-lg custom-form\"\n      v-if=\"!success && !error\"\n    >\n      <h2 class=\"text-center mb-4\">User Registration</h2>\n\n      <div class=\"form-group\">\n        <label>Enter User Name:</label>\n        <input v-model=\"UserName\" type=\"text\" class=\"form-control\" required />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Enter User Email ID:</label>\n        <input v-model=\"UserEmail\" type=\"email\" class=\"form-control\" required />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Enter Password:</label>\n        <input\n          v-model=\"UserPswd\"\n          type=\"password\"\n          class=\"form-control\"\n          required\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Confirm Password:</label>\n        <input\n          v-model=\"ConfPswd\"\n          type=\"password\"\n          class=\"form-control\"\n          required\n        />\n      </div>\n      <span\n        v-if=\"PswdMisMatch\"\n        style=\"color: red; font-family: 'Courier New', Courier, monospace\"\n      >\n        Passwords Don't Match!\n      </span>\n\n      <button\n        type=\"submit\"\n        class=\"btn btn-primary btn-block\"\n        v-bind:disabled=\"PswdMisMatch\"\n      >\n        Submit\n      </button>\n    </form>\n\n    <div v-else class=\"result-message\">\n      <div v-if=\"success\" class=\"success-message\">\n        <p>USER SUCCESSFULLY CREATED!</p>\n        <router-link to=\"/login\" class=\"btn btn-success btn-sm\"\n          >Login</router-link\n        >\n      </div>\n      <div v-if=\"error\" class=\"error-message\">\n        <p>ERROR CREATING USER!</p>\n        <router-link to=\"/\" class=\"btn btn-danger btn-sm\">Sign Up</router-link>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { BASE_URL } from \"@/assets/constants.js\";\nexport default {\n  data() {\n    return {\n      UserName: \"\",\n      UserEmail: \"\",\n      UserPswd: \"\",\n      ConfPswd: \"\",\n      PswdMisMatch: false,\n      success: false,\n      error: false,\n    };\n  },\n  watch: {\n    UserPswd() {\n      this.validatePasswords();\n    },\n    ConfPswd() {\n      this.validatePasswords();\n    },\n  },\n\n  methods: {\n    validatePasswords() {\n      this.PswdMisMatch = this.UserPswd !== this.ConfPswd;\n    },\n    async Signup() {\n      try {\n        console.log(this.UserEmail);\n        const response = await fetch(`${BASE_URL}/createuser`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            name: this.UserName,\n            role: \"user\",\n            email: this.UserEmail,\n            password: this.UserPswd,\n          }),\n        });\n\n        if (response.ok) {\n          this.success = true;\n          this.error = false;\n        } else {\n          this.error = true;\n          this.success = false;\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n#main {\n  background-image: url(../assets/BG.jpg);\n  background-size: 100%;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n.custom-form {\n  background-color: #f8f9fa;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n  width: 30%;\n}\n\n.custom-form label {\n  font-weight: bold;\n  color: #495057;\n}\n\n.custom-form input {\n  border: 1px solid #ced4da;\n  border-radius: 5px;\n  padding: 8px;\n  margin-bottom: 10px;\n}\n\n.custom-form button {\n  background-color: #007bff;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.custom-form button:hover {\n  background-color: #0056b3;\n}\n\n.result-message {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.success-message,\n.error-message {\n  background-color: #f8f9fa;\n  border: 1px solid;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 10px;\n  text-align: center;\n}\n\n.success-message {\n  border-color: #d4edda;\n  color: #28a745;\n}\n\n.error-message {\n  border-color: #f8d7da;\n  color: #721c24;\n}\n</style>\n"],"mappings":"AAyEA,SAASA,QAAO,QAAS,uBAAuB;AAChD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,KAAK;MACnBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLL,QAAQA,CAAA,EAAG;MACT,IAAI,CAACM,iBAAiB,CAAC,CAAC;IAC1B,CAAC;IACDL,QAAQA,CAAA,EAAG;MACT,IAAI,CAACK,iBAAiB,CAAC,CAAC;IAC1B;EACF,CAAC;EAEDC,OAAO,EAAE;IACPD,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACJ,YAAW,GAAI,IAAI,CAACF,QAAO,KAAM,IAAI,CAACC,QAAQ;IACrD,CAAC;IACD,MAAMO,MAAMA,CAAA,EAAG;MACb,IAAI;QACFC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,SAAS,CAAC;QAC3B,MAAMY,QAAO,GAAI,MAAMC,KAAK,CAAE,GAAEhB,QAAS,aAAY,EAAE;UACrDiB,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBC,IAAI,EAAE,IAAI,CAACpB,QAAQ;YACnBqB,IAAI,EAAE,MAAM;YACZC,KAAK,EAAE,IAAI,CAACrB,SAAS;YACrBsB,QAAQ,EAAE,IAAI,CAACrB;UACjB,CAAC;QACH,CAAC,CAAC;QAEF,IAAIW,QAAQ,CAACW,EAAE,EAAE;UACf,IAAI,CAACnB,OAAM,GAAI,IAAI;UACnB,IAAI,CAACC,KAAI,GAAI,KAAK;QACpB,OAAO;UACL,IAAI,CAACA,KAAI,GAAI,IAAI;UACjB,IAAI,CAACD,OAAM,GAAI,KAAK;QACtB;MACF,EAAE,OAAOoB,CAAC,EAAE;QACVd,OAAO,CAACC,GAAG,CAACa,CAAC,CAAC;MAChB;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}