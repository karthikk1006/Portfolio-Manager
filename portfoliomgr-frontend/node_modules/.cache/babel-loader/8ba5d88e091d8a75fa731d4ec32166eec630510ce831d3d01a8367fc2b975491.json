{"ast":null,"code":"export default {\n  name: \"addSongVue\",\n  data() {\n    return {\n      option: \"\",\n      createSong: false,\n      createAlbum: false,\n      album: \"\",\n      songName: \"\",\n      songFile: null,\n      lyricsFile: null,\n      success: false,\n      error: false,\n      albumName: \"\",\n      albumFile: null\n    };\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    creatorAlbums() {\n      return JSON.parse(localStorage.getItem(\"CreatorAlbums\"));\n    }\n  },\n  methods: {\n    async showForm() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(`http://127.0.0.1:5000/api/albums/${this.user.user_id}`, {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const creatorAlbums = {\n            user_id: this.user.user_id,\n            user_name: this.user.user_name,\n            creator_albums: res.albums\n          };\n          console.log(creatorAlbums);\n          localStorage.setItem(\"CreatorAlbums\", JSON.stringify(creatorAlbums));\n          if (this.option == \"Create Album\") {\n            this.createAlbum = true;\n          } else if (this.option == \"Create Song\") {\n            this.createSong = true;\n          } else {\n            this.error = true;\n          }\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    onFileChange(event) {\n      this.songFile = event.target.files[0];\n    },\n    onLyricsFileChange(event) {\n      this.lyricsFile = event.target.files[0];\n    },\n    async addSongToAlbum() {\n      try {\n        const token = this.user.access_token;\n        const songData = new FormData();\n        songData.append(\"songName\", this.songName);\n        songData.append(\"albumName\", this.album);\n        songData.append(\"songFile\", this.songFile);\n        songData.append(\"lyricsFile\", this.lyricsFile);\n        songData.append(\"creatorID\", this.user.user_id);\n        songData.append(\"creatorName\", this.user.user_name);\n        const response = await fetch(\"http://127.0.0.1:5000/api/songs\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          body: songData\n        });\n        if (response.ok) {\n          this.success = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    onAlbumFileChange(event) {\n      this.albumFile = event.target.files[0];\n    },\n    async addAlbum() {\n      try {\n        const token = this.user.access_token;\n        const albumData = new FormData();\n        albumData.append(\"albumName\", this.albumName);\n        albumData.append(\"albumImage\", this.albumFile);\n        albumData.append(\"userID\", this.user.user_id);\n        albumData.append(\"userName\", this.user.user_name);\n        const response = await fetch(\"http://127.0.0.1:5000/api/albums\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          body: albumData\n        });\n        if (response.ok) {\n          this.success = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","option","createSong","createAlbum","album","songName","songFile","lyricsFile","success","error","albumName","albumFile","computed","user","JSON","parse","localStorage","getItem","music","creatorAlbums","methods","showForm","token","access_token","response","fetch","user_id","method","headers","Authorization","ok","res","json","user_name","creator_albums","albums","console","log","setItem","stringify","onFileChange","event","target","files","onLyricsFileChange","addSongToAlbum","songData","FormData","append","body","onAlbumFileChange","addAlbum","albumData"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/addSong.vue"],"sourcesContent":["<template>\n  <div\n    id=\"main\"\n    class=\"container-fluid d-flex justify-content-center align-items-center vh-100\"\n    v-if=\"!createSong && !createAlbum && !success && !error\"\n  >\n    <form\n      @submit.prevent=\"showForm\"\n      class=\"container p-5 rounded-lg shadow-lg custom-form\"\n    >\n      <h2 class=\"text-center mb-4\">Create Song/ Album ?</h2>\n\n      <div class=\"form-group\">\n        <label>Choose what you want to do</label>\n        <select v-model=\"option\">\n          <option>Create Album</option>\n          <option>Create Song</option>\n        </select>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\n    </form>\n  </div>\n\n  <div\n    id=\"main\"\n    class=\"container-fluid d-flex justify-content-center align-items-center vh-100\"\n    v-if=\"createSong && !success && !error\"\n  >\n    <form\n      @submit.prevent=\"addSongToAlbum\"\n      class=\"container p-5 rounded-lg shadow-lg custom-form\"\n    >\n      <h2 class=\"text-center mb-4\">Upload Song</h2>\n\n      <div class=\"form-group\">\n        <label>Choose Album</label>\n        <select v-model=\"album\">\n          <option\n            v-for=\"album in creatorAlbums.creator_albums\"\n            :key=\"album.album_id\"\n          >\n            {{ album.AlbumName }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"form-group\">\n        <label>Enter Song Name</label>\n        <input type=\"text\" v-model=\"songName\" />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Upload Song</label>\n        <input type=\"file\" @change=\"onFileChange\" />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Upload Song Lyrics</label>\n        <input type=\"file\" @change=\"onLyricsFileChange\" />\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\n    </form>\n  </div>\n\n  <div\n    id=\"main\"\n    class=\"container-fluid d-flex justify-content-center align-items-center vh-100\"\n    v-if=\"createAlbum && !success && !error\"\n  >\n    <form\n      @submit.prevent=\"addAlbum\"\n      class=\"container p-5 rounded-lg shadow-lg custom-form\"\n    >\n      <h2 class=\"text-center mb-4\">Create Album</h2>\n\n      <div class=\"form-group\">\n        <label>Album Name</label>\n        <input type=\"text\" v-model=\"albumName\" />\n      </div>\n\n      <div class=\"form-group\">\n        <label>Upload Album Image</label>\n        <input type=\"file\" @change=\"onAlbumFileChange\" />\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\n    </form>\n  </div>\n\n  <div class=\"result-message\">\n    <div v-if=\"success\" class=\"success-message\">\n      <p>Song/Album created !</p>\n      <router-link to=\"/dashboard\" class=\"btn btn-success btn-sm\"\n        >Home</router-link\n      >\n    </div>\n    <div v-if=\"error\" class=\"error-message\">\n      <p>ERROR OCCURRED!</p>\n      <router-link to=\"/dashboard\" class=\"btn btn-danger btn-sm\"\n        >Try Again!</router-link\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"addSongVue\",\n  data() {\n    return {\n      option: \"\",\n      createSong: false,\n      createAlbum: false,\n      album: \"\",\n      songName: \"\",\n      songFile: null,\n      lyricsFile: null,\n      success: false,\n      error: false,\n\n      albumName: \"\",\n      albumFile: null,\n    };\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    creatorAlbums() {\n      return JSON.parse(localStorage.getItem(\"CreatorAlbums\"));\n    },\n  },\n  methods: {\n    async showForm() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\n          `http://127.0.0.1:5000/api/albums/${this.user.user_id}`,\n          {\n            method: \"GET\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n\n        if (response.ok) {\n          const res = await response.json();\n          const creatorAlbums = {\n            user_id: this.user.user_id,\n            user_name: this.user.user_name,\n            creator_albums: res.albums,\n          };\n          console.log(creatorAlbums);\n          localStorage.setItem(\"CreatorAlbums\", JSON.stringify(creatorAlbums));\n\n          if (this.option == \"Create Album\") {\n            this.createAlbum = true;\n          } else if (this.option == \"Create Song\") {\n            this.createSong = true;\n          } else {\n            this.error = true;\n          }\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    onFileChange(event) {\n      this.songFile = event.target.files[0];\n    },\n\n    onLyricsFileChange(event) {\n      this.lyricsFile = event.target.files[0];\n    },\n\n    async addSongToAlbum() {\n      try {\n        const token = this.user.access_token;\n        const songData = new FormData();\n        songData.append(\"songName\", this.songName);\n        songData.append(\"albumName\", this.album);\n        songData.append(\"songFile\", this.songFile);\n        songData.append(\"lyricsFile\", this.lyricsFile);\n        songData.append(\"creatorID\", this.user.user_id);\n        songData.append(\"creatorName\", this.user.user_name);\n\n        const response = await fetch(\"http://127.0.0.1:5000/api/songs\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: songData,\n        });\n\n        if (response.ok) {\n          this.success = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    onAlbumFileChange(event) {\n      this.albumFile = event.target.files[0];\n    },\n\n    async addAlbum() {\n      try {\n        const token = this.user.access_token;\n\n        const albumData = new FormData();\n        albumData.append(\"albumName\", this.albumName);\n        albumData.append(\"albumImage\", this.albumFile);\n        albumData.append(\"userID\", this.user.user_id);\n        albumData.append(\"userName\", this.user.user_name);\n\n        const response = await fetch(\"http://127.0.0.1:5000/api/albums\", {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: albumData,\n        });\n\n        if (response.ok) {\n          this.success = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n#main {\n  background-image: url(../assets/BG.png);\n  background-size: 100%;\n  background-position: center;\n  background-repeat: no-repeat;\n}\n.custom-form {\n  background-color: #f8f9fa;\n  border-radius: 10px;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n  width: 30%;\n}\n\n.custom-form label {\n  font-weight: bold;\n  color: #495057;\n}\n\n.custom-form input {\n  border: 1px solid #ced4da;\n  border-radius: 5px;\n  padding: 8px;\n  margin-bottom: 10px;\n}\n\n.custom-form button {\n  background-color: #007bff;\n  border: none;\n  border-radius: 5px;\n  color: #fff;\n  padding: 10px;\n  cursor: pointer;\n}\n\n.custom-form button:hover {\n  background-color: #0056b3;\n}\n\n.result-message {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n}\n\n.success-message,\n.error-message {\n  background-color: #f8f9fa;\n  border: 1px solid;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 10px;\n  text-align: center;\n}\n\n.success-message {\n  border-color: #d4edda;\n  color: #28a745;\n}\n\n.error-message {\n  border-color: #f8d7da;\n  color: #721c24;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}