{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"CreatorProfileVue\",\n  data() {\n    return {\n      showAlbums: true,\n      albumName: \"\",\n      creator_no_of_songs: 0,\n      creator_no_of_albums: 0\n    };\n  },\n  mounted() {\n    this.load();\n    for (const song of this.songs) {\n      if (this.user.user_id == song.Creator_ID) {\n        this.creator_no_of_songs++;\n      }\n    }\n    for (const album of this.albums) {\n      if (this.user.user_id == album.Creator_ID) {\n        this.creator_no_of_albums++;\n      }\n    }\n  },\n  methods: {\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    getAlbumURL(album_name) {\n      return `/edit/albums/${album_name}`;\n    },\n    getSongURL(song_name) {\n      return `/edit/songs/${song_name}`;\n    },\n    showSongs(album_name) {\n      this.showAlbums = false;\n      this.albumName = album_name;\n    },\n    async removeAlbum(album_id) {\n      const token = this.user.access_token;\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/api/albums/delete/${album_id}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          alert(\"Album deleted!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async removeSong(song_id) {\n      const token = this.user.access_token;\n      try {\n        const response = await fetch(`http://127.0.0.1:5000/api/songs/${song_id}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          alert(\"Song deleted!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    albums() {\n      return this.music.albums;\n    },\n    songs() {\n      return this.music.songs;\n    }\n  }\n};","map":{"version":3,"names":["name","data","showAlbums","albumName","creator_no_of_songs","creator_no_of_albums","mounted","load","song","songs","user","user_id","Creator_ID","album","albums","methods","token","access_token","response","fetch","method","headers","Authorization","ok","res","json","music","Songs","Albums","playlists","Playlists","localStorage","setItem","JSON","stringify","updateMusic","error","$forceUpdate","getAlbumURL","album_name","getSongURL","song_name","showSongs","removeAlbum","album_id","alert","$router","push","console","log","removeSong","song_id","computed","parse","getItem"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/creatorProfile.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"main-content\">\n      <nav class=\"navbar\">\n        <ul class=\"nav-list\">\n          <li class=\"nav-item\">\n            <router-link to=\"/about\" class=\"btn btn-primary\"\n              >About Us</router-link\n            >\n          </li>\n          <li class=\"nav-item\">\n            <router-link to=\"/dashboard\" class=\"btn btn-primary\"\n              >Dashboard</router-link\n            >\n          </li>\n        </ul>\n        <ul class=\"nav-list justify-content-end\">\n          <li class=\"nav-item logout\">\n            <router-link to=\"/\" class=\"btn btn-primary\">Logout</router-link>\n          </li>\n        </ul>\n      </nav>\n\n      <div class=\"container-fluid mt-3\">\n        <div class=\"row\">\n          <div class=\"col-md-8\">\n            <div v-if=\"showAlbums\">\n              <!-- Cards for creator songs -->\n              <div class=\"heading-container\">\n                <h2\n                  class=\"heading\"\n                  style=\"\n                    font-size: 2rem;\n                    margin-bottom: 10px;\n                    margin-top: 10px;\n                    color: #ffffff;\n                    margin-left: 0;\n                    text-transform: uppercase;\n                    letter-spacing: 2px;\n                    font-weight: bold;\n                  \"\n                >\n                  {{ user.user_name }}'s Albums\n                </h2>\n              </div>\n\n              <div class=\"card-deck\">\n                <!-- Example card (replace with dynamic content) -->\n\n                <div\n                  v-for=\"album in albums\"\n                  :key=\"album.Album_ID\"\n                  class=\"card-wrapper\"\n                >\n                  <div v-if=\"album.Creator_ID == user.user_id\">\n                    <div class=\"card\" style=\"width: 18rem; margin: 10px\">\n                      <img\n                        :src=\"`http://127.0.0.1:5000/static/${album.Album_Image}`\"\n                        alt=\"Album Image\"\n                        height=\"300px\"\n                      />\n\n                      <div class=\"card-body\">\n                        <h5 class=\"card-title\">{{ album.Album_Name }}</h5>\n                      </div>\n\n                      <div class=\"card-buttons\">\n                        <button\n                          class=\"btn btn-primary\"\n                          @click=\"showSongs(album.Album_Name)\"\n                        >\n                          Songs\n                        </button>\n                        <router-link\n                          :to=\"getAlbumURL(album.Album_Name)\"\n                          class=\"btn btn-primary\"\n                          >Edit</router-link\n                        >\n                        <button\n                          class=\"btn btn-primary\"\n                          @click=\"removeAlbum(album.Album_ID)\"\n                        >\n                          Delete\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div v-else>\n              <div class=\"col-md-8\">\n                <!-- Cards for creator songs -->\n                <div class=\"heading-container\">\n                  <h2\n                    class=\"heading\"\n                    style=\"\n                      font-size: 2rem;\n                      margin-bottom: 10px;\n                      margin-top: 10px;\n                      color: #ffffff;\n\n                      text-transform: uppercase;\n                      letter-spacing: 2px;\n                      font-weight: bold;\n                    \"\n                  >\n                    {{ albumName }}'s Songs\n                  </h2>\n                </div>\n\n                <div class=\"card-deck\">\n                  <!-- Example card (replace with dynamic content) -->\n\n                  <div\n                    v-for=\"song in songs\"\n                    :key=\"song.Song_ID\"\n                    class=\"card-wrapper\"\n                  >\n                    <div v-if=\"song.Album_Name == albumName\">\n                      <div class=\"card\" style=\"width: 18rem; margin: 10px\">\n                        <img\n                          :src=\"`http://127.0.0.1:5000/static/${song.Album_Image}`\"\n                          alt=\"Album Image\"\n                          height=\"300px\"\n                        />\n\n                        <div class=\"card-body\">\n                          <h5 class=\"card-title\">{{ song.Song_Name }}</h5>\n                        </div>\n\n                        <div class=\"card-buttons\">\n                          <router-link\n                            :to=\"getSongURL(song.Song_Name)\"\n                            class=\"btn btn-primary\"\n                            >Edit</router-link\n                          >\n                          <button\n                            class=\"btn btn-primary\"\n                            @click=\"removeSong(song.Song_ID)\"\n                          >\n                            Delete\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Right side for statistics -->\n          <div class=\"col-md-4\">\n            <div class=\"profile-card\">\n              <div class=\"card-body\">\n                <h5 class=\"card-title\">{{ user.user_name }}'s Profile</h5>\n                <div class=\"d-flex justify-content-center\">\n                  <img\n                    class=\"rounded-circle profile-picture\"\n                    :src=\"`http://127.0.0.1:5000/static/creators/${user.profile}`\"\n                    alt=\"Profile Picture\"\n                    height=\"220px\"\n                    width=\"180px\"\n                  />\n                </div>\n                <div class=\"d-flex justify-content-around\">\n                  <div class=\"rounded-circle text-center profile-stat mt-5\">\n                    <!-- Added mt-4 class for margin top -->\n                    <h6 class=\"mb-0\">{{ creator_no_of_songs }}</h6>\n                    <p class=\"mb-0\">Songs</p>\n                  </div>\n                  <div class=\"rounded-circle text-center profile-stat mt-5\">\n                    <!-- Added mt-4 class for margin top -->\n                    <h6 class=\"mb-0\">{{ creator_no_of_albums }}</h6>\n                    <p class=\"mb-0\">Albums</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CreatorProfileVue\",\n  data() {\n    return {\n      showAlbums: true,\n      albumName: \"\",\n      creator_no_of_songs: 0,\n      creator_no_of_albums: 0,\n    };\n  },\n  mounted() {\n    this.load();\n    for (const song of this.songs) {\n      if (this.user.user_id == song.Creator_ID) {\n        this.creator_no_of_songs++;\n      }\n    }\n\n    for (const album of this.albums) {\n      if (this.user.user_id == album.Creator_ID) {\n        this.creator_no_of_albums++;\n      }\n    }\n  },\n  methods: {\n    async load() {\n      try {\n        const token = this.user.access_token;\n        const response = await fetch(\"http://127.0.0.1:5000/load\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n        if (response.ok) {\n          const res = await response.json();\n          const music = {\n            songs: res.Songs,\n            albums: res.Albums,\n            playlists: res.Playlists,\n          };\n          localStorage.setItem(\"music\", JSON.stringify(music));\n          this.updateMusic();\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n\n    updateMusic() {\n      this.$forceUpdate();\n    },\n    getAlbumURL(album_name) {\n      return `/edit/albums/${album_name}`;\n    },\n    getSongURL(song_name) {\n      return `/edit/songs/${song_name}`;\n    },\n    showSongs(album_name) {\n      this.showAlbums = false;\n      this.albumName = album_name;\n    },\n    async removeAlbum(album_id) {\n      const token = this.user.access_token;\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:5000/api/albums/delete/${album_id}`,\n          {\n            method: \"DELETE\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        if (response.ok) {\n          alert(\"Album deleted!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async removeSong(song_id) {\n      const token = this.user.access_token;\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:5000/api/songs/${song_id}`,\n          {\n            method: \"DELETE\",\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          }\n        );\n        if (response.ok) {\n          alert(\"Song deleted!\");\n          this.$router.push(\"/dashboard\");\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n    music() {\n      return JSON.parse(localStorage.getItem(\"music\"));\n    },\n    albums() {\n      return this.music.albums;\n    },\n    songs() {\n      return this.music.songs;\n    },\n  },\n};\n</script>\n<style scoped>\n.btn.btn-primary {\n  background-color: transparent;\n  border: none;\n  color: #aeaeae;\n  padding: 10px 20px;\n  border-radius: 5px;\n  font-size: 0.8rem;\n  cursor: pointer;\n  transition: color 0.3s ease;\n  text-transform: uppercase;\n  font-weight: bold;\n  letter-spacing: 1px;\n  outline: none;\n}\n\n.btn.btn-primary:hover,\n.btn.btn-primary:focus,\n.btn.btn-primary:active,\n.card-buttons:hover {\n  background-color: transparent;\n  color: #ffffff; /* White text on hover, focus, and active */\n  border: none;\n  box-shadow: none; /* Remove any box-shadow */\n  text-decoration: none;\n}\n\n.nav-list {\n  list-style: none;\n  display: flex;\n  justify-content: space-between; /* Space between items */\n  margin: 0;\n  padding: 0;\n}\n\n.nav-item {\n  margin-right: 15px;\n}\n\n.logout a {\n  color: #fff; /* White text color for logout link */\n}\n\n/* Navbar Styling */\n.navbar {\n  background-color: #000000;\n  padding: 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\n  width: 102%;\n}\n\n.card {\n  width: 18rem;\n  margin: 20px;\n  border: 1px solid #ffffff;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: transform 0.3s ease-in-out;\n  background-color: #080808;\n  color: #ffffff;\n  text-decoration: solid;\n  font-weight: bold;\n}\n\n.card:hover {\n  transform: scale(1.05);\n}\n\n.card-body {\n  padding: 15px;\n}\n\n.card-title {\n  font-size: 24px;\n  margin-bottom: 10px;\n}\n\n.card-buttons {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end; /* Align buttons at the bottom */\n  padding: 0 10px;\n  margin-bottom: 10%; /* Add margin-top to adjust vertical alignment */\n}\n\n.profile-stat {\n  width: 80px;\n  height: 80px;\n  background-color: #ffffff; /* You can change the color */\n  color: #000000;\n  font-size: 16px;\n  padding: 10px;\n}\n\n.dashboard-container {\n  display: flex;\n  background-image: url(../assets/Dashboard.jpeg);\n  background-size: cover;\n  background-repeat: repeat;\n  background-position: center center;\n  min-height: 100vh;\n\n  /* Set the height of the container to 100% of the viewport height */\n}\n\n.main-content {\n  flex: 1;\n  padding: 20px; /* Add padding to create space for the sidebar */\n  margin-top: -19.8px;\n  margin-left: -20px;\n}\n\n.profile-card {\n  margin-top: 120px;\n  background-color: #000000; /* Card background color */\n  color: #fff; /* Text color */\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  border: 1px solid #ddd;\n  border-radius: 8px;\n}\n\n.heading-container {\n  background: linear-gradient(\n    to right,\n    #1f1f21,\n    #63646f\n  ); /* Gradient background */\n  border-radius: 10px; /* Rounded corners */\n\n  padding: 10px 20px; /* Padding */\n  margin-top: 20px;\n  margin-left: -40%;\n  margin-bottom: 10px; /* Margin bottom for spacing */\n  display: inline-block; /* Display as inline-block */\n  text-align: center; /* Center text horizontally */\n}\n\n.heading {\n  margin: 0;\n  font-size: 2rem;\n  color: #ffffff;\n  text-transform: uppercase;\n  letter-spacing: 2px;\n  font-weight: bold;\n}\n</style>\n"],"mappings":";AA6LA,eAAe;EACbA,IAAI,EAAE,mBAAmB;EACzBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,EAAE;MACbC,mBAAmB,EAAE,CAAC;MACtBC,oBAAoB,EAAE;IACxB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,IAAI,CAAC,CAAC;IACX,KAAK,MAAMC,IAAG,IAAK,IAAI,CAACC,KAAK,EAAE;MAC7B,IAAI,IAAI,CAACC,IAAI,CAACC,OAAM,IAAKH,IAAI,CAACI,UAAU,EAAE;QACxC,IAAI,CAACR,mBAAmB,EAAE;MAC5B;IACF;IAEA,KAAK,MAAMS,KAAI,IAAK,IAAI,CAACC,MAAM,EAAE;MAC/B,IAAI,IAAI,CAACJ,IAAI,CAACC,OAAM,IAAKE,KAAK,CAACD,UAAU,EAAE;QACzC,IAAI,CAACP,oBAAoB,EAAE;MAC7B;IACF;EACF,CAAC;EACDU,OAAO,EAAE;IACP,MAAMR,IAAIA,CAAA,EAAG;MACX,IAAI;QACF,MAAMS,KAAI,GAAI,IAAI,CAACN,IAAI,CAACO,YAAY;QACpC,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,4BAA4B,EAAE;UACzDC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,KAAM;UACjC;QACF,CAAC,CAAC;QACF,IAAIE,QAAQ,CAACK,EAAE,EAAE;UACf,MAAMC,GAAE,GAAI,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;UACjC,MAAMC,KAAI,GAAI;YACZjB,KAAK,EAAEe,GAAG,CAACG,KAAK;YAChBb,MAAM,EAAEU,GAAG,CAACI,MAAM;YAClBC,SAAS,EAAEL,GAAG,CAACM;UACjB,CAAC;UACDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACR,KAAK,CAAC,CAAC;UACpD,IAAI,CAACS,WAAW,CAAC,CAAC;QACpB,OAAO;UACL,IAAI,CAACC,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAI,IAAI;MACnB;IACF,CAAC;IAEDD,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACE,YAAY,CAAC,CAAC;IACrB,CAAC;IACDC,WAAWA,CAACC,UAAU,EAAE;MACtB,OAAQ,gBAAeA,UAAW,EAAC;IACrC,CAAC;IACDC,UAAUA,CAACC,SAAS,EAAE;MACpB,OAAQ,eAAcA,SAAU,EAAC;IACnC,CAAC;IACDC,SAASA,CAACH,UAAU,EAAE;MACpB,IAAI,CAACrC,UAAS,GAAI,KAAK;MACvB,IAAI,CAACC,SAAQ,GAAIoC,UAAU;IAC7B,CAAC;IACD,MAAMI,WAAWA,CAACC,QAAQ,EAAE;MAC1B,MAAM5B,KAAI,GAAI,IAAI,CAACN,IAAI,CAACO,YAAY;MACpC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CACzB,2CAA0CyB,QAAS,EAAC,EACrD;UACExB,MAAM,EAAE,QAAQ;UAChBC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,KAAM;UACjC;QACF,CACF,CAAC;QACD,IAAIE,QAAQ,CAACK,EAAE,EAAE;UACfsB,KAAK,CAAC,gBAAgB,CAAC;UACvB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL,IAAI,CAACX,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACdY,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;MACpB;IACF,CAAC;IAED,MAAMc,UAAUA,CAACC,OAAO,EAAE;MACxB,MAAMnC,KAAI,GAAI,IAAI,CAACN,IAAI,CAACO,YAAY;MACpC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CACzB,mCAAkCgC,OAAQ,EAAC,EAC5C;UACE/B,MAAM,EAAE,QAAQ;UAChBC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,KAAM;UACjC;QACF,CACF,CAAC;QACD,IAAIE,QAAQ,CAACK,EAAE,EAAE;UACfsB,KAAK,CAAC,eAAe,CAAC;UACtB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;QACjC,OAAO;UACL,IAAI,CAACX,KAAI,GAAI,IAAI;QACnB;MACF,EAAE,OAAOA,KAAK,EAAE;QACdY,OAAO,CAACC,GAAG,CAACb,KAAK,CAAC;MACpB;IACF;EACF,CAAC;EACDgB,QAAQ,EAAE;IACR1C,IAAIA,CAAA,EAAG;MACL,OAAOuB,IAAI,CAACoB,KAAK,CAACtB,YAAY,CAACuB,OAAO,CAAC,MAAM,CAAC,CAAC;IACjD,CAAC;IACD5B,KAAKA,CAAA,EAAG;MACN,OAAOO,IAAI,CAACoB,KAAK,CAACtB,YAAY,CAACuB,OAAO,CAAC,OAAO,CAAC,CAAC;IAClD,CAAC;IACDxC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACY,KAAK,CAACZ,MAAM;IAC1B,CAAC;IACDL,KAAKA,CAAA,EAAG;MACN,OAAO,IAAI,CAACiB,KAAK,CAACjB,KAAK;IACzB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}