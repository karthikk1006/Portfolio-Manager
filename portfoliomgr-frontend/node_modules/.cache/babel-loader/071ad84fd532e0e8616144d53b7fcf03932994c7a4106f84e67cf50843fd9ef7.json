{"ast":null,"code":"export default {\n  name: \"editSongVue\",\n  data() {\n    return {\n      option: \"\",\n      editLyrics: false,\n      editName: false,\n      success: false,\n      error: false,\n      song: \"\",\n      lyricsFile: \"\",\n      newSongName: \"\"\n    };\n  },\n  mounted() {\n    this.song = this.$route.params.song_name;\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    }\n  },\n  methods: {\n    showForm() {\n      if (this.option == \"Edit Lyrics\") {\n        this.editLyrics = true;\n      } else if (this.option == \"Edit Name\") {\n        this.editName = true;\n      } else {\n        this.error = true;\n      }\n    },\n    onFileChange(event) {\n      this.lyricsFile = event.target.files[0];\n    },\n    async editSongLyrics(song_name) {\n      try {\n        const token = this.user.access_token;\n        const editData = new FormData();\n        editData.append(\"Song_Name\", song_name);\n        editData.append(\"Song_Lyrics\", this.lyricsFile);\n        editData.append(\"Option\", \"Edit Lyrics\");\n        const response = await fetch(\"http://127.0.0.1:5000/api/songs\", {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          body: editData\n        });\n        if (response.ok) {\n          this.success = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n    async editSongName(song_name) {\n      try {\n        const token = this.user.access_token;\n        const editData = new FormData();\n        editData.append(\"Song_Name\", this.newSongName);\n        editData.append(\"oldSongName\", song_name);\n        editData.append(\"Option\", \"Edit Name\");\n        const response = await fetch(\"http://127.0.0.1:5000/api/songs\", {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          body: editData\n        });\n        if (response.ok) {\n          console.log(\"hi\");\n          this.success = true;\n        } else {\n          console.log(\"hello\");\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(\"world\");\n        this.error = true;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","option","editLyrics","editName","success","error","song","lyricsFile","newSongName","mounted","$route","params","song_name","computed","user","JSON","parse","localStorage","getItem","methods","showForm","onFileChange","event","target","files","editSongLyrics","token","access_token","editData","FormData","append","response","fetch","method","headers","Authorization","body","ok","editSongName","console","log"],"sources":["/Users/pranav/DBMS_Project/Portfolio-Manager/portfoliomgr-frontend/src/components/editSongs.vue"],"sourcesContent":["<template>\n  <div\n    id=\"main\"\n    class=\"container-fluid d-flex justify-content-center align-items-center vh-100\"\n    v-if=\"!editLyrics && !editName && !success && !error\"\n  >\n    <form\n      @submit.prevent=\"showForm\"\n      class=\"container p-5 rounded-lg shadow-lg custom-form\"\n    >\n      <h2 class=\"text-center mb-4\">Edit Lyrics/Name ?</h2>\n\n      <div class=\"form-group\">\n        <label>Choose what you want to do</label>\n        <select v-model=\"option\">\n          <option>Edit Lyrics</option>\n          <option>Edit Name</option>\n        </select>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\n    </form>\n  </div>\n\n  <div\n    id=\"main\"\n    class=\"container-fluid d-flex justify-content-center align-items-center vh-100\"\n    v-if=\"editLyrics && !success && !error\"\n  >\n    <form\n      @submit.prevent=\"editSongLyrics(song)\"\n      class=\"container p-5 rounded-lg shadow-lg custom-form\"\n    >\n      <h2 class=\"text-center mb-4\">Edit Song Lyrics</h2>\n\n      <div class=\"form-group\">\n        <label>Upload new lyrics</label>\n        <input type=\"file\" @change=\"onFileChange\" />\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\n    </form>\n  </div>\n\n  <div\n    id=\"main\"\n    class=\"container-fluid d-flex justify-content-center align-items-center vh-100\"\n    v-if=\"editName && !success && !error\"\n  >\n    <form\n      @submit.prevent=\"editSongName(song)\"\n      class=\"container p-5 rounded-lg shadow-lg custom-form\"\n    >\n      <h2 class=\"text-center mb-4\">Edit Song Name</h2>\n\n      <div class=\"form-group\">\n        <label>Song Name</label>\n        <input type=\"text\" v-model=\"newSongName\" />\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\n    </form>\n  </div>\n\n  <div v-if=\"success\" class=\"success-message\">\n    <p>Song/Album created !</p>\n    <router-link to=\"/dashboard\" class=\"btn btn-success btn-sm\"\n      >Home</router-link\n    >\n  </div>\n  <div v-if=\"error\" class=\"error-message\">\n    <p>ERROR OCCURRED!</p>\n    <router-link to=\"/dashboard\" class=\"btn btn-danger btn-sm\"\n      >Try Again!</router-link\n    >\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"editSongVue\",\n  data() {\n    return {\n      option: \"\",\n      editLyrics: false,\n      editName: false,\n      success: false,\n      error: false,\n      song: \"\",\n      lyricsFile: \"\",\n      newSongName: \"\",\n    };\n  },\n  mounted() {\n    this.song = this.$route.params.song_name;\n  },\n  computed: {\n    user() {\n      return JSON.parse(localStorage.getItem(\"user\"));\n    },\n  },\n  methods: {\n    showForm() {\n      if (this.option == \"Edit Lyrics\") {\n        this.editLyrics = true;\n      } else if (this.option == \"Edit Name\") {\n        this.editName = true;\n      } else {\n        this.error = true;\n      }\n    },\n\n    onFileChange(event) {\n      this.lyricsFile = event.target.files[0];\n    },\n\n    async editSongLyrics(song_name) {\n      try {\n        const token = this.user.access_token;\n        const editData = new FormData();\n        editData.append(\"Song_Name\", song_name);\n        editData.append(\"Song_Lyrics\", this.lyricsFile);\n        editData.append(\"Option\", \"Edit Lyrics\");\n\n        const response = await fetch(\"http://127.0.0.1:5000/api/songs\", {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: editData,\n        });\n\n        if (response.ok) {\n          this.success = true;\n        } else {\n          this.error = true;\n        }\n      } catch (error) {\n        this.error = true;\n      }\n    },\n\n    async editSongName(song_name) {\n      try {\n        const token = this.user.access_token;\n        const editData = new FormData();\n        editData.append(\"Song_Name\", this.newSongName);\n        editData.append(\"oldSongName\", song_name);\n        editData.append(\"Option\", \"Edit Name\");\n\n        const response = await fetch(\"http://127.0.0.1:5000/api/songs\", {\n          method: \"PUT\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n          body: editData,\n        });\n\n        if (response.ok) {\n          console.log(\"hi\");\n          this.success = true;\n        } else {\n          console.log(\"hello\");\n          this.error = true;\n        }\n      } catch (error) {\n        console.log(\"world\");\n        this.error = true;\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}